{
  "AI": {
    "classes": {
      "AIPackage": {
        "abstract": false,
        "description": "Metadata information that can be added to a package to describe an AI application or trained AI model.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/AIPackage",
        "name": "AIPackage",
        "profile": "AI",
        "properties": {
          "autonomyType": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/autonomyType"
          },
          "domain": {
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/domain"
          },
          "energyConsumption": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/energyConsumption"
          },
          "hyperparameter": {
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/hyperparameter"
          },
          "informationAboutApplication": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/informationAboutApplication"
          },
          "informationAboutTraining": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/informationAboutTraining"
          },
          "limitation": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/limitation"
          },
          "metric": {
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/metric"
          },
          "metricDecisionThreshold": {
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/metricDecisionThreshold"
          },
          "modelDataPreprocessing": {
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/modelDataPreprocessing"
          },
          "modelExplainability": {
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/modelExplainability"
          },
          "safetyRiskAssessment": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/safetyRiskAssessment"
          },
          "standardCompliance": {
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/standardCompliance"
          },
          "typeOfModel": {
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/typeOfModel"
          },
          "useSensitivePersonalInformation": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/useSensitivePersonalInformation"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Software/Package",
        "summary": "Specifies an AI package and its associated information."
      },
      "EnergyConsumption": {
        "abstract": false,
        "description": "The class used for denoting the training energy consumption, inference energy consumption and fine tuning energy consumption of the AI model(s) used in an AI system.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/EnergyConsumption",
        "name": "EnergyConsumption",
        "profile": "AI",
        "properties": {
          "finetuningEnergyConsumption": {
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/finetuningEnergyConsumption"
          },
          "inferenceEnergyConsumption": {
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/inferenceEnergyConsumption"
          },
          "trainingEnergyConsumption": {
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/trainingEnergyConsumption"
          }
        },
        "summary": "The class that contains properties to describe energy consumption incurred by an AI model in different stages of its lifecycle."
      },
      "EnergyConsumptionDescription": {
        "abstract": false,
        "description": "This class is designed to store energy consumption data, including the quantity\nand the unit of measurement.\n\nThe energyQuantity property stores the amount of energy consumed,\nand the energyUnit property stores the unit used for measurement.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/EnergyConsumptionDescription",
        "name": "EnergyConsumptionDescription",
        "profile": "AI",
        "properties": {
          "energyQuantity": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/energyQuantity"
          },
          "energyUnit": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/AI/energyUnit"
          }
        },
        "summary": "The class that helps note down the quantity of energy consumption and the unit\nused for measurement."
      }
    },
    "description": "The AI namespace defines a set of concepts and data elements related to AI system and model artifacts. These artifacts are the tangible outputs of the AI development process, such as software packages, models, and datasets.",
    "iri": "https://spdx.org/rdf/3.0.0/terms/AI",
    "properties": {
      "autonomyType": {
        "description": "Indicates if a human is involved in any of the decisions of the AI system\nor if that system is fully automatic.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/autonomyType",
        "name": "autonomyType",
        "profile": "AI",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/PresenceType",
        "summary": "States if a human is involved in the decisions of the AI software."
      },
      "domain": {
        "datatype": "string",
        "description": "A free-form text that describes the domain where the AI model contained in the AI software\ncan be expected to operate successfully. Examples include computer vision, natural language processing, etc.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/domain",
        "name": "domain",
        "profile": "AI",
        "summary": "Captures the domain in which the AI package can be used."
      },
      "energyConsumption": {
        "description": "A free-form text captures known or estimated energy consumption for the training of the AI model.\n\nIn case not known, the estimation could be based on information about computational resources used\n(e.g. number of floating point operations – FLOPs), training time, type and quantity of processing units,\nand other relevant details related to the training.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/energyConsumption",
        "name": "energyConsumption",
        "profile": "AI",
        "range": "https://spdx.org/rdf/3.0.0/terms/AI/EnergyConsumption",
        "summary": "Indicates the amount of energy consumed to train the AI model."
      },
      "energyQuantity": {
        "datatype": "decimal",
        "description": "Provides the quantity information of the energy.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/energyQuantity",
        "name": "energyQuantity",
        "profile": "AI",
        "summary": "Represents the energy quantity."
      },
      "energyUnit": {
        "description": "Provides the unit information of the energy.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/energyUnit",
        "name": "energyUnit",
        "profile": "AI",
        "range": "https://spdx.org/rdf/3.0.0/terms/AI/EnergyUnitType",
        "summary": "Specifies the unit in which energy is measured."
      },
      "finetuningEnergyConsumption": {
        "description": "The field specifies the amount of energy consumed when finetuning the AI model that is being used in the AI system.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/finetuningEnergyConsumption",
        "name": "finetuningEnergyConsumption",
        "profile": "AI",
        "range": "https://spdx.org/rdf/3.0.0/terms/AI/EnergyConsumptionDescription",
        "summary": "Specifies the amount of energy consumed when finetuning the AI model that is being used in the AI system."
      },
      "hyperparameter": {
        "description": "Records a hyperparameter value.\n\nHyperparameters are settings defined before the training process that control\nthe learning algorithm's behavior. They differ from model parameters,\nwhich are learned from the data during training. Developers typically set\nhyperparameters manually or through a process of hyperparameter tuning\n(also known as trial and error).\n\nExamples of hyperparameters include learning rate, batch size, and the number\nof layers in a neural network.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/hyperparameter",
        "name": "hyperparameter",
        "profile": "AI",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/DictionaryEntry",
        "summary": "Records a hyperparameter used to build the AI model contained in the AI package."
      },
      "inferenceEnergyConsumption": {
        "description": "The field specifies the amount of energy consumed during inference time by an AI model that is being used in the AI system.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/inferenceEnergyConsumption",
        "name": "inferenceEnergyConsumption",
        "profile": "AI",
        "range": "https://spdx.org/rdf/3.0.0/terms/AI/EnergyConsumptionDescription",
        "summary": "Specifies the amount of energy consumed during inference time by an AI model that is being used in the AI system."
      },
      "informationAboutApplication": {
        "datatype": "string",
        "description": "A free-form text description of how the AI model is used within the software.\nIt should include any relevant information, such as pre-processing steps,\nthird-party APIs, and other pertinent details.\n\nIt can also include:\n\n- Functionality provided by the AI model within the software application,\n  including: any specific tasks or decisions it is designed to perform;\n  any pre-processing steps that are applied to the input data before it is\n  fed into the AI model for inference, such as data cleaning, normalization,\n  or feature extraction;\n  and any third-party APIs or services that are used in conjunction with\n  the AI model, such as data sources, cloud services, or other AI models.\n- Description of any dependencies or requirements needed to run the AI model\n  within the software application, including: specific hardware,\n  software libraries, and operating systems.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/informationAboutApplication",
        "name": "informationAboutApplication",
        "profile": "AI",
        "summary": "Provides relevant information about the AI software, not including the model description."
      },
      "informationAboutTraining": {
        "datatype": "string",
        "description": "A detailed explanation of the training process,\nincluding the specific techniques, algorithms, and methods employed.\n\nExamples include:\n\n- training data used to train the AI model, along with any relevant details\n  about its source, quality, and pre-processing steps;\n- specific training algorithms employed, including stochastic gradient descent,\n  backpropagation, and reinforcement learning.\n- specific training techniques used to improve the performance or accuracy\n  of the AI model, such as transfer learning, fine-tuning, or active learning; and\n- any evaluation metrics used to assess the performance of the AI model\n  during the training process, including accuracy, precision, recall, and F1 score.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/informationAboutTraining",
        "name": "informationAboutTraining",
        "profile": "AI",
        "summary": "Describes relevant information about different steps of the training process."
      },
      "limitation": {
        "datatype": "string",
        "description": "A free-form text that captures a limitation of the AI package\n(or of the AI models present in the AI package).\nNote that this is not guaranteed to be exhaustive.\nFor instance, a limitation might be that the AI package cannot be used on datasets from a certain demography.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/limitation",
        "name": "limitation",
        "profile": "AI",
        "summary": "Captures a limitation of the AI software."
      },
      "metric": {
        "description": "Records the measurement with which the AI model was evaluated.\nThis makes statements about the prediction quality including uncertainty,\naccuracy, characteristics of the tested population, quality, fairness, explainability, robustness etc.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/metric",
        "name": "metric",
        "profile": "AI",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/DictionaryEntry",
        "summary": "Records the measurement of prediction quality of the AI model."
      },
      "metricDecisionThreshold": {
        "description": "Each metric might be computed based on a decision threshold.\nFor instance, precision or recall is typically computed by checking\nif the probability of the outcome is larger than 0.5.\nEach decision threshold should match with a metric field defined in the AI package.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/metricDecisionThreshold",
        "name": "metricDecisionThreshold",
        "profile": "AI",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/DictionaryEntry",
        "summary": "Captures the threshold that was used for computation of a metric described in the metric field."
      },
      "modelDataPreprocessing": {
        "datatype": "string",
        "description": "A free-form text that describes the preprocessing steps\napplied to the training data before training of the model(s) contained in the AI software.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/modelDataPreprocessing",
        "name": "modelDataPreprocessing",
        "profile": "AI",
        "summary": "Describes all the preprocessing steps applied to the training data before the model training."
      },
      "modelExplainability": {
        "datatype": "string",
        "description": "A free-form text that lists the different explainability mechanisms\n(such as SHAP, or other model specific explainability mechanisms) that can be used to explain the model.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/modelExplainability",
        "name": "modelExplainability",
        "profile": "AI",
        "summary": "Describes methods that can be used to explain the model."
      },
      "safetyRiskAssessment": {
        "description": "Records the results of general safety risk assessment of the AI system.\n\nUsing categorization according to the\n[EU general risk assessment methodology](https://ec.europa.eu/docsroom/documents/17107).\nThe methodology implements Article 20 of Regulation (EC) No 765/2008 and is intended to assist\nauthorities when they assess general product safety compliance.\n\nIt is important to note that this categorization differs from the one proposed in the\nEU AI Act's provisional agreement.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/safetyRiskAssessment",
        "name": "safetyRiskAssessment",
        "profile": "AI",
        "range": "https://spdx.org/rdf/3.0.0/terms/AI/SafetyRiskAssessmentType",
        "summary": "Records the results of general safety risk assessment of the AI system."
      },
      "standardCompliance": {
        "datatype": "string",
        "description": "A free-form text that captures a standard that the AI software complies with.\n\nThis includes both published and unpublished standards, such as those developed by ISO, IEEE, and ETSI.\n\nThe standard may, but is not necessarily required to, satisfy a legal or regulatory requirement.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/standardCompliance",
        "name": "standardCompliance",
        "profile": "AI",
        "summary": "Captures a standard that is being complied with."
      },
      "trainingEnergyConsumption": {
        "description": "The field specifies the amount of energy consumed when training the AI model that is being used in the AI system.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/trainingEnergyConsumption",
        "name": "trainingEnergyConsumption",
        "profile": "AI",
        "range": "https://spdx.org/rdf/3.0.0/terms/AI/EnergyConsumptionDescription",
        "summary": "Specifies the amount of energy consumed when training the AI model that is being used in the AI system."
      },
      "typeOfModel": {
        "datatype": "string",
        "description": "A free-form text that records the type of the AI model(s) used in the software.\nFor instance, if it is a supervised model, unsupervised model, reinforcement learning model or a combination of those.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/typeOfModel",
        "name": "typeOfModel",
        "profile": "AI",
        "summary": "Records the type of the model used in the AI software."
      },
      "useSensitivePersonalInformation": {
        "description": "Notes if sensitive personal information\nis used in the training or inference of the AI models.\nThis might include biometric data, addresses or other data that can be used to infer a person's identity.\n\nRelated: `hasSensitivePersonalInformation` in `/Dataset/DatasetPackage`",
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/useSensitivePersonalInformation",
        "name": "useSensitivePersonalInformation",
        "profile": "AI",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/PresenceType",
        "summary": "Records if sensitive personal information is used during model training or could be used during the inference."
      }
    },
    "summary": "The AI Profile is designed to provide a standardized way of documenting and sharing information about AI software packages (i.e. systems).",
    "vocabularies": {
      "EnergyUnitType": {
        "description": "List the different acceptable units for measuring energy consumption.\n\nIf the unit in which the energy consumption has been recorded\nis not listed here, please select \"other\".",
        "entries": {
          "kilowattHour": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/AI/EnergyUnitType/kilowattHour",
            "name": "kilowattHour",
            "summary": "Kilowatt-hour."
          },
          "megajoule": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/AI/EnergyUnitType/megajoule",
            "name": "megajoule",
            "summary": "Megajoule."
          },
          "other": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/AI/EnergyUnitType/other",
            "name": "other",
            "summary": "Any other units of energy measurement."
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/EnergyUnitType",
        "name": "EnergyUnitType",
        "profile": "AI",
        "summary": "Specifies the unit of energy consumption."
      },
      "SafetyRiskAssessmentType": {
        "description": "Lists the different general safety risk levels that can be used to describe the\ngeneral safety risk of an AI system.\n\nUsing categorization according to the\n[EU general risk assessment methodology](https://ec.europa.eu/docsroom/documents/17107).\nThe methodology implements Article 20 of Regulation (EC) No 765/2008 and is intended to assist\nauthorities when they assess general product safety compliance.",
        "entries": {
          "high": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/AI/SafetyRiskAssessmentType/high",
            "name": "high",
            "summary": "The second-highest level of risk posed by an AI system."
          },
          "low": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/AI/SafetyRiskAssessmentType/low",
            "name": "low",
            "summary": "Low/no risk is posed by an AI system."
          },
          "medium": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/AI/SafetyRiskAssessmentType/medium",
            "name": "medium",
            "summary": "The third-highest level of risk posed by an AI system."
          },
          "serious": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/AI/SafetyRiskAssessmentType/serious",
            "name": "serious",
            "summary": "The highest level of risk posed by an AI system."
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/AI/SafetyRiskAssessmentType",
        "name": "SafetyRiskAssessmentType",
        "profile": "AI",
        "summary": "Specifies the safety risk level."
      }
    }
  },
  "Build": {
    "classes": {
      "Build": {
        "abstract": false,
        "description": "A build is a representation of the process in which a piece of software or artifact is built. It encapsulates information related to a build process and\nprovides an element from which relationships can be created to describe the build's inputs, outputs, and related entities (e.g. builders, identities, etc.).\n\nDefinitions of \"buildType\", \"configSourceEntrypoint\", \"configSourceUri\", \"parameters\" and \"environment\" follow those defined in [SLSA provenance](https://slsa.dev/provenance/v0.2).\n\nExternalIdentifier of type \"urlScheme\" may be used to identify build logs. In this case, the comment of the ExternalIdentifier should be \"LogReference\".\n\nNote that buildStartTime and buildEndTime are optional, and may be omitted to simplify creating reproducible builds.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Build/Build",
        "name": "Build",
        "profile": "Build",
        "properties": {
          "buildEndTime": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Build/buildEndTime"
          },
          "buildId": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Build/buildId"
          },
          "buildStartTime": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Build/buildStartTime"
          },
          "buildType": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Build/buildType"
          },
          "configSourceDigest": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Build/configSourceDigest"
          },
          "configSourceEntrypoint": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Build/configSourceEntrypoint"
          },
          "configSourceUri": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Build/configSourceUri"
          },
          "environment": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Build/environment"
          },
          "parameters": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Build/parameters"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/Element",
        "summary": "Class that describes a build instance of software/artifacts."
      }
    },
    "description": "A Software Build is defined here as the act of converting software inputs into software artifacts using software build tools. Inputs can include source code, config files, artifacts that are build environments, and build tools. Outputs can include intermediate artifacts to other build inputs or the final artifacts. \n\nThe Build profile provides a subclass of Element called Build. It also provides a minimum set of required Relationship Types from the Core profile:\n\n- hasInputs: Describes the relationship from the Build element to its inputs.\n- hasOutputs: Describes the relationship from the Build element to its outputs.\n- invokedBy: Describes the relationship from the Build element to the Agent that invoked it.\n\nIn addition, the following Relationship Types may be used to describe a Build.\n\n- hasHost: Describes the relationship from the Build element to the build stage or host.\n- configures: Describes the relationship from a configuration to the Build element.\n- ancestorOf: Describes a relationship from a Build element to Build eelements that describe its child builds.\n- decendentOf: Describes a relationship from a child Build element to its parent.\n- usesTool: Describes a relationship from a Build element to a build tool.\n\nAll relationships in the Build Profile are scoped to the \"build\" LifecycleScopeType period.\n\nThe `hasInputs` relationship can be applied to a config file or a build tool if the nature of these inputs are not known at the creation of an SPDX document.",
    "iri": "https://spdx.org/rdf/3.0.0/terms/Build",
    "properties": {
      "buildEndTime": {
        "datatype": "dateTimeStamp",
        "description": "buildEndTime describes the time at which a build stops or finishes. This value is typically recorded by the builder.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Build/buildEndTime",
        "name": "buildEndTime",
        "profile": "Build",
        "summary": "Property that describes the time at which a build stops."
      },
      "buildId": {
        "datatype": "string",
        "description": "A buildId is a locally unique identifier to identify a unique instance of a build. This identifier differs based on build toolchain, platform, or naming convention used by an organization or standard.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Build/buildId",
        "name": "buildId",
        "profile": "Build",
        "summary": "A buildId is a locally unique identifier used by a builder to identify a unique instance of a build produced by it."
      },
      "buildStartTime": {
        "datatype": "dateTimeStamp",
        "description": "buildStartTime is the time at which a build is triggered. The builder typically records this value.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Build/buildStartTime",
        "name": "buildStartTime",
        "profile": "Build",
        "summary": "Property describing the start time of a build."
      },
      "buildType": {
        "datatype": "anyURI",
        "description": "A buildType is a URI expressing the toolchain, platform, or infrastructure that the build was invoked on. For example, if the build was invoked on GitHub's CI platform using github actions, the buildType can be expressed as `https://github.com/actions`. In contrast, if the build was invoked on a local machine, the buildType can be expressed as `file://username@host/path/to/build`.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Build/buildType",
        "name": "buildType",
        "profile": "Build",
        "summary": "A buildType is a hint that is used to indicate the toolchain, platform, or infrastructure that the build was invoked on."
      },
      "configSourceDigest": {
        "description": "configSourceDigest is the checksum of the build configuration file used by a builder to execute a build. This Property uses the Core model's [Hash](../../Core/Classes/Hash.md) class.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Build/configSourceDigest",
        "name": "configSourceDigest",
        "profile": "Build",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/Hash",
        "summary": "Property that describes the digest of the build configuration file used to invoke a build."
      },
      "configSourceEntrypoint": {
        "datatype": "string",
        "description": "A build entrypoint is the invoked executable of a build which always runs when the build is triggered. For example, when a build is triggered by running a shell script, the entrypoint is `script.sh`. In terms of a declared build, the entrypoint is the position in a configuration file or a build declaration which is always run when the build is triggered. For example, in the following configuration file, the entrypoint of the build is `publish`.\n\n```\nname: Publish packages to PyPI\n\non:\ncreate:\ntags: \"*\"\n\njobs:\npublish:\nruns-on: ubuntu-latest\nif: startsWith(github.ref, 'refs/tags/')\nsteps:\n\n...\n```",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Build/configSourceEntrypoint",
        "name": "configSourceEntrypoint",
        "profile": "Build",
        "summary": "Property describes the invocation entrypoint of a build."
      },
      "configSourceUri": {
        "datatype": "anyURI",
        "description": "If a build configuration exists for the toolchain or platform performing the build, the configSourceUri of a build is the URI of that build configuration. For example, a build triggered by a GitHub action is defined by a build configuration YAML file. In this case, the configSourceUri is the URL of that YAML file. \nm",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Build/configSourceUri",
        "name": "configSourceUri",
        "profile": "Build",
        "summary": "Property that describes the URI of the build configuration source file."
      },
      "environment": {
        "description": "environment is a map of environment variables and values that are set during a build session. This is different from the [parameters](parameters.md) property in that it describes the environment variables set before a build is invoked rather than the variables provided to the builder.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Build/environment",
        "name": "environment",
        "profile": "Build",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/DictionaryEntry",
        "summary": "Property describing the session in which a build is invoked."
      },
      "parameters": {
        "description": "parameters is a key-value map of all build parameters and their values that were provided to the builder for a build instance. This is different from the [environment](environment.md) property in that the keys and values are provided as command line arguments or a configuration file to the builder.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Build/parameters",
        "name": "parameters",
        "profile": "Build",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/DictionaryEntry",
        "summary": "Property describing the parameters used in an instance of a build."
      }
    },
    "summary": "The Build Profile defines the set of information required to describe an instance of a Software Build."
  },
  "Core": {
    "classes": {
      "Agent": {
        "abstract": false,
        "description": "The Agent class represents anything that has the potential to act on a system. This could be a person, organization, software agent, etc. This is not to be confused with tools that are used to perform tasks.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/Agent",
        "name": "Agent",
        "profile": "Core",
        "properties": {},
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/Element",
        "summary": "Agent represents anything with the potential to act on a system."
      },
      "Annotation": {
        "abstract": false,
        "description": "An Annotation is an assertion made in relation to one or more elements. The `contentType` property describes the format of the `statement` property.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/Annotation",
        "name": "Annotation",
        "profile": "Core",
        "properties": {
          "annotationType": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/annotationType"
          },
          "contentType": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/contentType"
          },
          "statement": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/statement"
          },
          "subject": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/subject"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/Element",
        "summary": "An assertion made in relation to one or more elements."
      },
      "Artifact": {
        "abstract": true,
        "description": "An artifact is a distinct article or unit within the digital domain,\nsuch as an electronic file, a software package, a device or an element of data.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/Artifact",
        "name": "Artifact",
        "profile": "Core",
        "properties": {
          "builtTime": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/builtTime"
          },
          "originatedBy": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/originatedBy"
          },
          "releaseTime": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/releaseTime"
          },
          "standardName": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/standardName"
          },
          "suppliedBy": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/suppliedBy"
          },
          "supportLevel": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/supportLevel"
          },
          "validUntilTime": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/validUntilTime"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/Element",
        "summary": "A distinct article or unit within the digital domain."
      },
      "Bom": {
        "abstract": false,
        "description": "A Bill Of Materials (BOM) is a container for a grouping of SPDX-3.0 content\ncharacterizing details about a product.\nThis could include details of the content and composition of the product,\nprovenence details of the product and/or\nits composition, licensing information, known quality or security issues, etc.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/Bom",
        "name": "Bom",
        "profile": "Core",
        "properties": {},
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/Bundle",
        "summary": "A container for a grouping of SPDX-3.0 content characterizing details\n(provenence, composition, licensing, etc.) about a product."
      },
      "Bundle": {
        "abstract": false,
        "description": "A bundle is a collection of Elements that have a shared context.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/Bundle",
        "name": "Bundle",
        "profile": "Core",
        "properties": {
          "context": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/context"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/ElementCollection",
        "summary": "A collection of Elements that have a shared context."
      },
      "CreationInfo": {
        "abstract": false,
        "description": "The CreationInfo provides information about who created the Element, and when and how it was created. \n\nThe dateTime created is often the date of last change (e.g., a git commit date), not the date when the SPDX data was created, as doing so supports reproducible builds.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/CreationInfo",
        "name": "CreationInfo",
        "profile": "Core",
        "properties": {
          "comment": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/comment"
          },
          "created": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/created"
          },
          "createdBy": {
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/createdBy"
          },
          "createdUsing": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/createdUsing"
          },
          "specVersion": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/specVersion"
          }
        },
        "summary": "Provides information about the creation of the Element."
      },
      "DictionaryEntry": {
        "abstract": false,
        "description": "The class used for implementing a generic string mapping (also known as associative array, dictionary, or hash map) in SPDX.  Each DictionaryEntry contains a key-value pair which maps the key to its associated value.  To implement a dictionary, this class is to be used in a collection with unique keys.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/DictionaryEntry",
        "name": "DictionaryEntry",
        "profile": "Core",
        "properties": {
          "key": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/key"
          },
          "value": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/value"
          }
        },
        "summary": "A key with an associated value."
      },
      "Element": {
        "abstract": true,
        "description": "An Element is a representation of a fundamental concept either directly inherent\nto the Bill of Materials (BOM) domain or indirectly related to the BOM domain\nand necessary for contextually characterizing BOM concepts and relationships.\nWithin SPDX-3.0 structure this is the base class acting as a consistent,\nunifying, and interoperable foundation for all explicit\nand inter-relatable content objects.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/Element",
        "name": "Element",
        "profile": "Core",
        "properties": {
          "comment": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/comment"
          },
          "creationInfo": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/creationInfo"
          },
          "description": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/description"
          },
          "extension": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/extension"
          },
          "externalIdentifier": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/externalIdentifier"
          },
          "externalRef": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/externalRef"
          },
          "name": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/name"
          },
          "summary": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/summary"
          },
          "verifiedUsing": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/verifiedUsing"
          }
        },
        "summary": "Base domain class from which all other SPDX-3.0 domain classes derive."
      },
      "ElementCollection": {
        "abstract": true,
        "description": "An ElementCollection is a collection of Elements, not necessarily with unifying context.\n\nNote that all ElementCollections must conform to the core profile even if the core profile is no specified in the profileConformance property.\nIf the profileConformance property is not provided, core is to be assumed as the default.\n\n**Constraints**\nIf the ElementCollection has at least 1 element, it must also have at least 1 rootElement.\n\nThe element must not be of type SpdxDocument.\n\nThe rootElement must not be of type SpdxDocument.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ElementCollection",
        "name": "ElementCollection",
        "profile": "Core",
        "properties": {
          "element": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/element"
          },
          "profileConformance": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/profileConformance"
          },
          "rootElement": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/rootElement"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/Element",
        "summary": "A collection of Elements, not necessarily with unifying context."
      },
      "ExternalIdentifier": {
        "abstract": false,
        "description": "An ExternalIdentifier is a reference to a resource outside the scope of SPDX-3.0 content\nthat provides a unique key within an established domain that can uniquely identify an Element.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalIdentifier",
        "name": "ExternalIdentifier",
        "profile": "Core",
        "properties": {
          "comment": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/comment"
          },
          "externalIdentifierType": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/externalIdentifierType"
          },
          "identifier": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/identifier"
          },
          "identifierLocator": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/identifierLocator"
          },
          "issuingAuthority": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/issuingAuthority"
          }
        },
        "summary": "A reference to a resource identifier defined outside the scope of SPDX-3.0 content that uniquely identifies an Element."
      },
      "ExternalMap": {
        "abstract": false,
        "description": "An External Map is a map of Element identifiers that are used within a Document\nbut defined external to that Document.\nThe external map provides details about the externally-defined Element\nsuch as its provenance, where to retrieve it, and how to verify its integrity.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalMap",
        "name": "ExternalMap",
        "profile": "Core",
        "properties": {
          "definingArtifact": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/definingArtifact"
          },
          "externalSpdxId": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/externalSpdxId"
          },
          "locationHint": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/locationHint"
          },
          "verifiedUsing": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/verifiedUsing"
          }
        },
        "summary": "A map of Element identifiers that are used within a Document but defined external to that Document."
      },
      "ExternalRef": {
        "abstract": false,
        "description": "An External Reference points to a general resource outside the scope of the SPDX-3.0 content\nthat provides additional context, characteristics or related information about an Element.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRef",
        "name": "ExternalRef",
        "profile": "Core",
        "properties": {
          "comment": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/comment"
          },
          "contentType": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/contentType"
          },
          "externalRefType": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/externalRefType"
          },
          "locator": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/locator"
          }
        },
        "summary": "A reference to a resource outside the scope of SPDX-3.0 content related to an Element."
      },
      "Hash": {
        "abstract": false,
        "description": "A hash is a grouping of characteristics unique to the result\nof applying a mathematical algorithm\nthat maps data of arbitrary size to a bit string (the hash)\nand is a one-way function, that is,\na function which is practically infeasible to invert.\n\nThis is commonly used for integrity checking of data.\n\nPlease note that different profiles may also provide additional methods for verifying the integrity of specific subclasses of Elements.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/Hash",
        "name": "Hash",
        "profile": "Core",
        "properties": {
          "algorithm": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/algorithm"
          },
          "hashValue": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/hashValue"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/IntegrityMethod",
        "summary": "A mathematically calculated representation of a grouping of data."
      },
      "IntegrityMethod": {
        "abstract": true,
        "description": "An IntegrityMethod provides an independently reproducible mechanism that permits verification\nof a specific Element that correlates to the data in this SPDX document. This identifier enables\na recipient to determine if anything in the original Element has been changed and eliminates\nconfusion over which version or modification of a specific Element is referenced.\n\nPlease note that different profiles may also provide additional methods for verifying the integrity of specific subclasses of Elements.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/IntegrityMethod",
        "name": "IntegrityMethod",
        "profile": "Core",
        "properties": {
          "comment": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/comment"
          }
        },
        "summary": "Provides an independently reproducible mechanism that permits verification of a specific Element."
      },
      "LifecycleScopedRelationship": {
        "abstract": false,
        "description": "Certain relationships are sensitive to where they occur in the lifecycle.  This parameter lets us avoid a proliferation of relationships, by parameterizing this context information for a relationship.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/LifecycleScopedRelationship",
        "name": "LifecycleScopedRelationship",
        "profile": "Core",
        "properties": {
          "scope": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/scope"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/Relationship",
        "summary": "Provide context for a relationship that occurs in the lifecycle."
      },
      "NamespaceMap": {
        "abstract": false,
        "description": "A namespace map allows the creator of a collection of Elements that could be serialized to suggest \na set of shorter identifiers (\"prefixes\") for particular namespace portions \nof ElementIDs to be used in SPDX content serialization in order to provide a more\nhuman-readable and smaller serialized representation of the Elements.\n\nFor details of how NamespaceMap content is to be serialized please refer to general SPDX serialization guidance at https://spdx.github.io/spdx-3-model/serialization/readme.md and the various serialization format specific .md filed under https://spdx.github.io/spdx-3-model/serialization/ (TODO: update the URLs as soon as the context is publicly available)\n\nNamespace maps support a variety of relevant use cases such as:\n\n1) An SPDX content producer wishing to provide clarity of their serialization of an SPDX 2.X simple style collection where all content is newly minted and a single prefix-namespace is used.  The consumer of SPDX content wishes to preserve the name space mapping provided by such a producer.  In this case, the consumer would record the namespace map prefixes in the NamespaceMap such that subsequent serializations could reproduce the prefixes / namespaces in the native serialization format.\n2) An SPDX content producer wishing to maintain consistent prefix use and understanding across multiple different serialization formats of the produced content.\n   For example, an SBOM producer wishes to share/publish the SBOM as JSON-LD and XML. The producer can specify the preferred prefix mappings in the native serialization format using information from a single Namespacemap accessible local to the producer.\n3) An SPDX content consumer/producer wishing to maintain consistent prefix use while round tripping from SPDX content received, deserialized, modified/extended in some way, and then reserialized in the same serialization form.\n   In this case the prefix-namespace mappings utilized in the content are transformed from the original native namespace/prefix into the in memory NamespaceMap then transformed from the NamespaceMap back into the resultant serialization native namespace / prefix format.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/NamespaceMap",
        "name": "NamespaceMap",
        "profile": "Core",
        "properties": {
          "namespace": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/namespace"
          },
          "prefix": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/prefix"
          }
        },
        "summary": "A mapping between prefixes and namespace partial URIs."
      },
      "Organization": {
        "abstract": false,
        "description": "An Organization is a group of people who work together in an organized way for a shared purpose.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/Organization",
        "name": "Organization",
        "profile": "Core",
        "properties": {},
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/Agent",
        "summary": "A group of people who work together in an organized way for a shared purpose."
      },
      "PackageVerificationCode": {
        "abstract": false,
        "description": "This verification method is provided for compatibility with SPDX 2.X.\n\nUse of this verification code method is discouraged except for scenarios where the `contentIdentifier` property on `Artifact` can not be used.\n\nThis verification method provides an independently reproducible mechanism identifying specific contents of a package based on the actual files (except the SPDX document itself, if it is included in the package) that make up each package and that correlates to the data in this SPDX document.\n\nThis identifier enables a recipient to determine if any file in the original package (that the analysis was done on) has been changed and permits inclusion of an SPDX document as part of a package.\n\nAlgorithm:\n\n    verificationcode = 0\n    filelist = templist = \"\"\n    for all files in the package {\n         if file is an \"excludes\" file, skip it /* exclude SPDX analysis file(s) */\n         else append templist with \"algorithm(file)/n\"\n        }\n        \n     sort templist in ascending order by algorithm value\n     \n     filelist = templist with \"/n\"s removed. /* ordered sequence of algorithm values with no separators */\n     \n     hashValue = algorithm(filelist) /* Where algorithm(file) applies a hash algorithm on the contents of file and returns the result in lowercase hexadecimal digits. */\n\nRequired sort order: '0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f' (ASCII order)",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/PackageVerificationCode",
        "name": "PackageVerificationCode",
        "profile": "Core",
        "properties": {
          "algorithm": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/algorithm"
          },
          "hashValue": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/hashValue"
          },
          "packageVerificationCodeExcludedFile": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/packageVerificationCodeExcludedFile"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/IntegrityMethod",
        "summary": "An SPDX version 2.X compatible verification method for software packages."
      },
      "Person": {
        "abstract": false,
        "description": "A Person is an individual human being.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/Person",
        "name": "Person",
        "profile": "Core",
        "properties": {},
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/Agent",
        "summary": "An individual human being."
      },
      "PositiveIntegerRange": {
        "abstract": false,
        "description": "PositiveIntegerRange is a tuple of two positive integers that define a range.\n\"beginIntegerRange\" must be less than or equal to \"endIntegerRange\".",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/PositiveIntegerRange",
        "name": "PositiveIntegerRange",
        "profile": "Core",
        "properties": {
          "beginIntegerRange": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/beginIntegerRange"
          },
          "endIntegerRange": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/endIntegerRange"
          }
        },
        "summary": "A tuple of two positive integers that define a range."
      },
      "Relationship": {
        "abstract": false,
        "description": "A Relationship is a grouping of characteristics unique to an assertion\nthat one Element is related to one or more other Elements in some way.\n\nTo explicitly assert that no such relationships exist, the `to` property \nshould contain the 'NONE' individual and no other elements.\nA relationship that contains 'NONE' and additional elements in the `to` property is not valid.\n\nTo explicitly assert that no assertions are being made regarding the \nexistence of such relationships, the `to` property should contain the 'NOASSERTION' individual.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/Relationship",
        "name": "Relationship",
        "profile": "Core",
        "properties": {
          "completeness": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/completeness"
          },
          "endTime": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/endTime"
          },
          "from": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/from"
          },
          "relationshipType": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/relationshipType"
          },
          "startTime": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/startTime"
          },
          "to": {
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/to"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/Element",
        "summary": "Describes a relationship between one or more elements."
      },
      "SoftwareAgent": {
        "abstract": false,
        "description": "A SoftwareAgent is a software program that is given the authority (similar to a user's authority) to act on a system.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/SoftwareAgent",
        "name": "SoftwareAgent",
        "profile": "Core",
        "properties": {},
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/Agent",
        "summary": "A software agent."
      },
      "SpdxDocument": {
        "abstract": false,
        "description": "The SpdxDocument provides a convenient way to express information about collections of SPDX Elements that could potentially be serialized as complete\nunits (e.g., all in-scope SPDX data within a single JSON-LD file). SpdxDocument is independent of any particular serialization format or instance.\nInformation we wish to preserve about a specific instance of serialization of this SPDX content is NOT expressed using the SpdxDocument but rather using an associated Artifact representing a particular instance of SPDX data physical serialization.\n\nAny instance of serialization of SPDX data MUST NOT contain more than one SpdxDocument element definition.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/SpdxDocument",
        "name": "SpdxDocument",
        "profile": "Core",
        "properties": {
          "dataLicense": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/dataLicense"
          },
          "imports": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/imports"
          },
          "namespaceMap": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/namespaceMap"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/ElementCollection",
        "summary": "A collection of SPDX Elements that could potentially be serialized."
      },
      "Tool": {
        "abstract": false,
        "description": "A Tool is an element of hardware and/or software utilized to carry out a particular function.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/Tool",
        "name": "Tool",
        "profile": "Core",
        "properties": {},
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/Element",
        "summary": "An element of hardware and/or software utilized to carry out a particular function."
      }
    },
    "description": "The Core namespace defines foundational concepts serving as the basis for all SPDX-3.0 profiles.",
    "individuals": {
      "NoAssertionElement": {
        "description": "NoAssertionElement should be used if \nthe SPDX creator has attempted to but cannot reach a reasonable objective determination;\nthe SPDX creator has made no attempt to determine this field; or\nthe SPDX creator has intentionally provided no information (no meaning should be implied by doing so).\n\nFor example, a Relationship with `from`=Element1, `relationshipType`=\"ancestorOf\", \nand `to`=NOASSERTION is explicitly expressing that no assertion is being made about any potential descendents of Element1.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/NoAssertionElement",
        "name": "NoAssertionElement",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/Element",
        "summary": "An Individual Value for Element representing a set of Elements of unknown \nidentify or cardinality (number)."
      },
      "NoneElement": {
        "description": "NoneLicenseElement should be used if the SPDX creator desires to assert that \nthere are NO elements for the given context of use.\n\nFor example, a Relationship with `from`=Element1, `relationshipType`=\"ancestorOf\", \nand `to`=NONE is explicitly expressing an assertion that Element1 has no descendents.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/NoneElement",
        "name": "NoneElement",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/Element",
        "summary": "An Individual Value for Element representing a set of Elements with \ncardinality (number/count) of zero."
      }
    },
    "iri": "https://spdx.org/rdf/3.0.0/terms/Core",
    "properties": {
      "algorithm": {
        "description": "An algorithm specifies the algorithm that was used for calculating the hash value.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/algorithm",
        "name": "algorithm",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm",
        "summary": "Specifies the algorithm used for calculating the hash value."
      },
      "annotationType": {
        "description": "An annotationType describes the type of an annotation.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/annotationType",
        "name": "annotationType",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/AnnotationType",
        "summary": "Describes the type of annotation."
      },
      "beginIntegerRange": {
        "datatype": "positiveInteger",
        "description": "beginIntegerRange is a positive integer that defines the beginning of a range.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/beginIntegerRange",
        "name": "beginIntegerRange",
        "profile": "Core",
        "summary": "Defines the beginning of a range."
      },
      "builtTime": {
        "datatype": "dateTimeStamp",
        "description": "A builtTime specifies the time an artifact was built.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/builtTime",
        "name": "builtTime",
        "profile": "Core",
        "summary": "Specifies the time an artifact was built."
      },
      "comment": {
        "datatype": "string",
        "description": "A comment is an optional field for creators of the Element to provide comments\nto the readers/reviewers of the document.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/comment",
        "name": "comment",
        "profile": "Core",
        "summary": "Provide consumers with comments by the creator of the Element about the Element."
      },
      "completeness": {
        "description": "Completeness gives information about whether the provided relationships are\ncomplete, known to be incomplete or if no assertion is made either way.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/completeness",
        "name": "completeness",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipCompleteness",
        "summary": "Provides information about the completeness of relationships."
      },
      "contentType": {
        "datatype": "string",
        "description": "ContentType specifies the media type of an Element or Property.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/contentType",
        "name": "contentType",
        "profile": "Core",
        "summary": "Specifies the media type of an Element or Property."
      },
      "context": {
        "datatype": "string",
        "description": "A context gives information about the circumstances or unifying properties\nthat Elements of the bundle have been assembled under.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/context",
        "name": "context",
        "profile": "Core",
        "summary": "Gives information about the circumstances or unifying properties\nthat Elements of the bundle have been assembled under."
      },
      "created": {
        "datatype": "dateTimeStamp",
        "description": "Created is a date that identifies when the Element was originally created.\nThe time stamp can serve as an indication as to whether the analysis needs to be updated. This is often the date of last change (e.g., a git commit date), not the date when the SPDX data was created, as doing so supports reproducible builds.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/created",
        "name": "created",
        "profile": "Core",
        "summary": "Identifies when the Element was originally created."
      },
      "createdBy": {
        "description": "CreatedBy identifies who or what created the Element.\nThe generation method will assist the recipient of the Element in assessing\nthe general reliability/accuracy of the analysis information.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/createdBy",
        "name": "createdBy",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/Agent",
        "summary": "Identifies who or what created the Element."
      },
      "createdUsing": {
        "description": "CreatedUsing identifies the tooling that was used during the creation of the Element.\nThe generation method will assist the recipient of the Element in assessing\nthe general reliability/accuracy of the analysis information.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/createdUsing",
        "name": "createdUsing",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/Tool",
        "summary": "Identifies the tooling that was used during the creation of the Element."
      },
      "creationInfo": {
        "description": "CreationInfo provides information about the creation of the Element.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/creationInfo",
        "name": "creationInfo",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/CreationInfo",
        "summary": "Provides information about the creation of the Element."
      },
      "dataLicense": {
        "description": "The data license provides the license under which the SPDX documentation of the Element can be used.\nThis is to alleviate any concern that content (the data or database) in an SPDX file\nis subject to any form of intellectual property right that could restrict the re-use\nof the information or the creation of another SPDX file for the same project(s).\nThis approach avoids intellectual property and related restrictions over the SPDX file,\nhowever individuals can still contract with each other to restrict release\nof specific collections of SPDX files (which map to software bill of materials)\nand the identification of the supplier of SPDX files.\nCompliance with this document includes populating the SPDX fields therein\nwith data related to such fields (\"SPDX-Metadata\"). \nThis document contains numerous fields where an SPDX file creator may provide\nrelevant explanatory text in SPDX-Metadata. Without opining on the lawfulness\nof \"database rights\" (in jurisdictions where applicable),\nsuch explanatory text is copyrightable subject matter in most Berne Convention countries.\nBy using the SPDX specification, or any portion hereof,\nyou hereby agree that any copyright rights (as determined by your jurisdiction)\nin any SPDX-Metadata, including without limitation explanatory text,\nshall be subject to the terms of the Creative Commons CC0 1.0 Universal license. \nFor SPDX-Metadata not containing any copyright rights, \nyou hereby agree and acknowledge that the SPDX-Metadata is provided to you \"as-is\"\nand without any representations or warranties of any kind concerning the SPDX-Metadata,\nexpress, implied, statutory or otherwise, including without limitation warranties\nof title, merchantability, fitness for a particular purpose, non-infringement,\nor the absence of latent or other defects, accuracy, or the presence or absence of errors,\nwhether or not discoverable, all to the greatest extent permissible under applicable law.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/dataLicense",
        "name": "dataLicense",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/AnyLicenseInfo",
        "summary": "Provides the license under which the SPDX documentation of the Element can be used."
      },
      "definingArtifact": {
        "description": "A definingArtifact property is used to link the Element identifier for an Element defined external to a given SpdxDocument to an Artifact Element representing the SPDX serialization instance which contains the definition for the Element.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/definingArtifact",
        "name": "definingArtifact",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/Artifact",
        "summary": "Artifact representing a serialization instance of SPDX data containing the definition of a particular Element."
      },
      "description": {
        "datatype": "string",
        "description": "This field is a detailed description of the Element. It may also be extracted from the Element itself.\nThe intent is to provide recipients of the SPDX file with a detailed technical explanation\nof the functionality, anticipated use, and anticipated implementation of the Element.\nThis field may also include a description of improvements over prior versions of the Element.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/description",
        "name": "description",
        "profile": "Core",
        "summary": "Provides a detailed description of the Element."
      },
      "element": {
        "description": "This field refers to one or more Elements that are part of an ElementCollection.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/element",
        "name": "element",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/Element",
        "summary": "Refers to one or more Elements that are part of an ElementCollection."
      },
      "endIntegerRange": {
        "datatype": "positiveInteger",
        "description": "endIntegerRange is a positive integer that defines the end of a range.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/endIntegerRange",
        "name": "endIntegerRange",
        "profile": "Core",
        "summary": "Defines the end of a range."
      },
      "endTime": {
        "datatype": "dateTimeStamp",
        "description": "A endTime specifies the time from which element is no applicable / valid.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/endTime",
        "name": "endTime",
        "profile": "Core",
        "summary": "Specifies the time from which an element is no longer applicable / valid."
      },
      "extension": {
        "description": "`extension` specifies an Extension-based characterization of a particular aspect of an Element.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/extension",
        "name": "extension",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Extension/Extension",
        "summary": "Specifies an Extension characterization of some aspect of an Element."
      },
      "externalIdentifier": {
        "description": "ExternalIdentifier points to a resource outside the scope of SPDX-3.0 content\nthat uniquely identifies an Element.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/externalIdentifier",
        "name": "externalIdentifier",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalIdentifier",
        "summary": "Provides a reference to a resource outside the scope of SPDX-3.0 content\nthat uniquely identifies an Element."
      },
      "externalIdentifierType": {
        "description": "An externalIdentifierType specifies the type of the external identifier.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/externalIdentifierType",
        "name": "externalIdentifierType",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalIdentifierType",
        "summary": "Specifies the type of the external identifier."
      },
      "externalRef": {
        "description": "This field points to a resource outside the scope of the SPDX-3.0 content\nthat provides additional characteristics of an Element.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/externalRef",
        "name": "externalRef",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRef",
        "summary": "Points to a resource outside the scope of the SPDX-3.0 content\nthat provides additional characteristics of an Element."
      },
      "externalRefType": {
        "description": "An externalRefType specifies the type of the external reference.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/externalRefType",
        "name": "externalRefType",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType",
        "summary": "Specifies the type of the external reference."
      },
      "externalSpdxId": {
        "datatype": "anyURI",
        "description": "ExternalSpdxId identifies an external Element used within a Document but defined external to that Document.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/externalSpdxId",
        "name": "externalSpdxId",
        "profile": "Core",
        "summary": "Identifies an external Element used within a Document but defined external to that Document."
      },
      "from": {
        "description": "This field references the Element on the left-hand side of a relationship.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/from",
        "name": "from",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/Element",
        "summary": "References the Element on the left-hand side of a relationship."
      },
      "hashValue": {
        "datatype": "string",
        "description": "HashValue is the result of applying a hash algorithm to an Element.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/hashValue",
        "name": "hashValue",
        "profile": "Core",
        "summary": "The result of applying a hash algorithm to an Element."
      },
      "identifier": {
        "datatype": "string",
        "description": "An identifier uniquely identifies an external element.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/identifier",
        "name": "identifier",
        "profile": "Core",
        "summary": "Uniquely identifies an external element."
      },
      "identifierLocator": {
        "datatype": "anyURI",
        "description": "Identifiers are not always structured as URIs. An identifierLocator is a location hint (a URL) that provides contextual information relevant to the identifier.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/identifierLocator",
        "name": "identifierLocator",
        "profile": "Core",
        "summary": "Provides the location for more information regarding an external identifier."
      },
      "imports": {
        "description": "Imports provides an ExternalMap of Element identifiers that are used within a document\nbut defined external to that document.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/imports",
        "name": "imports",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalMap",
        "summary": "Provides an ExternalMap of Element identifiers."
      },
      "issuingAuthority": {
        "datatype": "string",
        "description": "An issuingAuthority is an entity that is authorized to issue identification credentials.\n\nThe entity may be a government, non-profit, educational institution, or commercial enterprise.  The string provides a unique identifier for the issuing authority.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/issuingAuthority",
        "name": "issuingAuthority",
        "profile": "Core",
        "summary": "An entity that is authorized to issue identification credentials."
      },
      "key": {
        "datatype": "string",
        "description": "A key used in generic a key-value pair.\nA key-value pair can be used to implement a dictionary which associates a key with a value.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/key",
        "name": "key",
        "profile": "Core",
        "summary": "A key used in a generic key-value pair."
      },
      "locationHint": {
        "datatype": "anyURI",
        "description": "A locationHint provides an indication of where to retrieve an external Element.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/locationHint",
        "name": "locationHint",
        "profile": "Core",
        "summary": "Provides an indication of where to retrieve an external Element."
      },
      "locator": {
        "datatype": "string",
        "description": "A locator provides the location of an external reference.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/locator",
        "name": "locator",
        "profile": "Core",
        "summary": "Provides the location of an external reference."
      },
      "name": {
        "datatype": "string",
        "description": "This field identifies the name of an Element as designated by the creator. \nThe name of an Element is an important convention and easier to refer to than the URI.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/name",
        "name": "name",
        "profile": "Core",
        "summary": "Identifies the name of an Element as designated by the creator."
      },
      "namespace": {
        "datatype": "anyURI",
        "description": "A namespace provides an unambiguous mechanism for conveying a URI fragment portion of an ElementID.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/namespace",
        "name": "namespace",
        "profile": "Core",
        "summary": "Provides an unambiguous mechanism for conveying a URI fragment portion of an ElementID."
      },
      "namespaceMap": {
        "description": "This field provides a NamespaceMap of prefixes and associated namespace partial URIs applicable to an SpdxDocument and independent of any specific serialization format or instance.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/namespaceMap",
        "name": "namespaceMap",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/NamespaceMap",
        "summary": "Provides a NamespaceMap of prefixes and associated namespace partial URIs applicable to an SpdxDocument and independent of any specific serialization format or instance."
      },
      "originatedBy": {
        "description": "OriginatedBy identifies from where or whom the Element originally came.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/originatedBy",
        "name": "originatedBy",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/Agent",
        "summary": "Identifies from where or whom the Element originally came."
      },
      "packageVerificationCodeExcludedFile": {
        "datatype": "string",
        "description": "A relative filename with the root of the package archive or directory referencing a file to be excluded from the `PackageVerificationCode`.\n\nIn general, every filename is preceded with a ./, see http://www.ietf.org/rfc/rfc3986.txt for syntax.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/packageVerificationCodeExcludedFile",
        "name": "packageVerificationCodeExcludedFile",
        "profile": "Core",
        "summary": "The relative file name of a file to be excluded from the `PackageVerificationCode`."
      },
      "prefix": {
        "datatype": "string",
        "description": "A prefix is a substitute for a URI.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/prefix",
        "name": "prefix",
        "profile": "Core",
        "summary": "A substitute for a URI."
      },
      "profileConformance": {
        "description": "Describes a profile to which the creator of this ElementCollection intends to conform.\nThe profileConformance will apply to all Elements contained within the collection as well as the collection itself.\nConformance to a profile is defined by the additional restrictions documented in the profile specific documentation and schema files.\nUse of this property allows the creator of an ElementCollection to communicate to consumers their intent to adhere to the profile additional restrictions.\nThe profileConformance has a default value of core if no other profileConformance is specified since all ElementCollections and Element must adhere to the core profile.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/profileConformance",
        "name": "profileConformance",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/ProfileIdentifierType",
        "summary": "Describes one a profile which the creator of this ElementCollection intends to conform to."
      },
      "relationshipType": {
        "description": "This field provides information about the relationship between two Elements.\nFor example, you can represent a relationship between two different Files,\nbetween a Package and a File, between two Packages, or between one SPDXDocument and another SPDXDocument.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/relationshipType",
        "name": "relationshipType",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType",
        "summary": "Information about the relationship between two Elements."
      },
      "releaseTime": {
        "datatype": "dateTimeStamp",
        "description": "A releaseTime specifies the time an artifact was released.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/releaseTime",
        "name": "releaseTime",
        "profile": "Core",
        "summary": "Specifies the time an artifact was released."
      },
      "rootElement": {
        "description": "This property is used to denote the root Element(s) of a tree of elements contained in an SBOM.\nThe tree consists of other elements directly and indirectly related through properties or Relationships from the root.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/rootElement",
        "name": "rootElement",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/Element",
        "summary": "This property is used to denote the root Element(s) of a tree of elements contained in an SBOM."
      },
      "scope": {
        "description": "A scope is additional context about a relationship, that clarifies the relationship between elements.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/scope",
        "name": "scope",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/LifecycleScopeType",
        "summary": "Capture the scope of information about a specific relationship between elements."
      },
      "specVersion": {
        "datatype": "string",
        "description": "The specVersion provides a reference number that can be used to understand how to parse and interpret an Element.\nIt will enable both future changes to the specification and to support backward compatibility.\nThe major version number shall be incremented when incompatible changes between versions are made\n(one or more sections are created, modified or deleted).\nThe minor version number shall be incremented when backwards compatible changes are made.\n\nHere, parties exchanging information in accordance with the SPDX specification need to provide \n100% transparency as to which SPDX specification version such information is conforming to.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/specVersion",
        "name": "specVersion",
        "profile": "Core",
        "summary": "Provides a reference number that can be used to understand how to parse and interpret an Element."
      },
      "standardName": {
        "datatype": "string",
        "description": "Various standards may be relevant to useful to capture for specific artifacts.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/standardName",
        "name": "standardName",
        "profile": "Core",
        "summary": "The name of a relevant standard that may apply to an artifact."
      },
      "startTime": {
        "datatype": "dateTimeStamp",
        "description": "A startTime specifies the time from which element is applicable / valid.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/startTime",
        "name": "startTime",
        "profile": "Core",
        "summary": "Specifies the time from which an element is applicable / valid."
      },
      "statement": {
        "datatype": "string",
        "description": "A statement is a commentary on an assertion that an annotator has made.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/statement",
        "name": "statement",
        "profile": "Core",
        "summary": "Commentary on an assertion that an annotator has made."
      },
      "subject": {
        "description": "A subject is an Element an annotator has made an assertion about.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/subject",
        "name": "subject",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/Element",
        "summary": "An Element an annotator has made an assertion about."
      },
      "summary": {
        "datatype": "string",
        "description": "A summary is a short description of an Element. Here, the intent is to allow the Element creator to \nprovide concise information about the function or use of the Element.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/summary",
        "name": "summary",
        "profile": "Core",
        "summary": "A short description of an Element."
      },
      "suppliedBy": {
        "description": "Identify the actual distribution source for the artifact (e.g., snippet, file, package, vulnerability) or VulnAssessmentRelationship being referenced.\nThis might or might not be different from the originating distribution source for the artifact (e.g., snippet, file, package, vulnerability) or VulnAssessmentRelationship..",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/suppliedBy",
        "name": "suppliedBy",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/Agent",
        "summary": "Identifies who or what supplied the artifact or VulnAssessmentRelationship referenced by the Element."
      },
      "supportLevel": {
        "description": "supportLevel provides an indication of what support expectations that the supplier of an artifact is providing to the user.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/supportLevel",
        "name": "supportLevel",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/SupportType",
        "summary": "Specifies the level of support associated with an artifact."
      },
      "to": {
        "description": "This field references an Element on the right-hand side of a relationship.   If it is not provided, it indicates that there are no known relationships of the given type.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/to",
        "name": "to",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/Element",
        "summary": "References an Element on the right-hand side of a relationship."
      },
      "validUntilTime": {
        "datatype": "dateTimeStamp",
        "description": "A validUntilTime specifies until when the artifact can be used before its usage needs to be reassessed.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/validUntilTime",
        "name": "validUntilTime",
        "profile": "Core",
        "summary": "Specifies until when the artifact can be used before its usage needs to be reassessed."
      },
      "value": {
        "datatype": "string",
        "description": "A value used in a generic key-value pair.\nA key-value pair can be used to implement a dictionary which associates a key with a value.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/value",
        "name": "value",
        "profile": "Core",
        "summary": "A value used in a generic key-value pair."
      },
      "verifiedUsing": {
        "description": "VerifiedUsing provides an IntegrityMethod with which the integrity of an Element can be asserted.\n\nPlease note that different profiles may also provide additional methods for verifying the integrity of specific subclasses of Elements.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/verifiedUsing",
        "name": "verifiedUsing",
        "profile": "Core",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/IntegrityMethod",
        "summary": "Provides an IntegrityMethod with which the integrity of an Element can be asserted."
      }
    },
    "summary": "The basis for all SPDX profiles.",
    "vocabularies": {
      "AnnotationType": {
        "description": "AnnotationType specifies the type of an annotation.",
        "entries": {
          "other": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/AnnotationType/other",
            "name": "other",
            "summary": "Used to store extra information about an Element which is not part of a Review (e.g. extra information provided during the creation of the Element)."
          },
          "review": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/AnnotationType/review",
            "name": "review",
            "summary": "Used when someone reviews the Element."
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/AnnotationType",
        "name": "AnnotationType",
        "profile": "Core",
        "summary": "Specifies the type of an annotation."
      },
      "ExternalIdentifierType": {
        "description": "ExteralIdentifierType specifies the type of an external identifier.",
        "entries": {
          "cpe22": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalIdentifierType/cpe22",
            "name": "cpe22",
            "summary": "https://cpe.mitre.org/files/cpe-specification_2.2.pdf"
          },
          "cpe23": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalIdentifierType/cpe23",
            "name": "cpe23",
            "summary": "https://nvlpubs.nist.gov/nistpubs/Legacy/IR/nistir7695.pdf"
          },
          "cve": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalIdentifierType/cve",
            "name": "cve",
            "summary": "An identifier for a specific software flaw defined within the official CVE Dictionary and that conforms to the CVE specification as defined by https://csrc.nist.gov/glossary/term/cve_id."
          },
          "email": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalIdentifierType/email",
            "name": "email",
            "summary": "https://datatracker.ietf.org/doc/html/rfc3696#section-3"
          },
          "gitoid": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalIdentifierType/gitoid",
            "name": "gitoid",
            "summary": "https://www.iana.org/assignments/uri-schemes/prov/gitoid Gitoid stands for [Git Object ID](https://git-scm.com/book/en/v2/Git-Internals-Git-Objects) and a gitoid of type blob is a unique hash of a binary artifact. A gitoid may represent the software [Artifact ID](https://github.com/omnibor/spec/blob/main/spec/SPEC.md#artifact-id) or the [OmniBOR Identifier](https://github.com/omnibor/spec/blob/main/spec/SPEC.md#omnibor-identifier) for the software artifact's associated [OmniBOR Document](https://github.com/omnibor/spec/blob/main/spec/SPEC.md#omnibor-document); this ambiguity exists because the OmniBOR Document is itself an artifact, and the gitoid of that artifact is its valid identifier. Omnibor is a minimalistic schema to describe software [Artifact Dependency Graphs](https://github.com/omnibor/spec/blob/main/spec/SPEC.md#artifact-dependency-graph-adg). Gitoids calculated on software artifacts (Snippet, File, or Package Elements) should be recorded in the SPDX 3.0 SoftwareArtifact's ContentIdentifier property. Gitoids calculated on the OmniBOR Document (OmniBOR Identifiers) should be recorded in the SPDX 3.0 Element's ExternalIdentifier property."
          },
          "other": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalIdentifierType/other",
            "name": "other",
            "summary": "Used when the type doesn't match any of the other options."
          },
          "packageUrl": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalIdentifierType/packageUrl",
            "name": "packageUrl",
            "summary": "https://github.com/package-url/purl-spec"
          },
          "securityOther": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalIdentifierType/securityOther",
            "name": "securityOther",
            "summary": "Used when there is a security related identifier of unspecified type."
          },
          "swhid": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalIdentifierType/swhid",
            "name": "swhid",
            "summary": "SoftWare Hash IDentifier, persistent intrinsic identifiers for digital artifacts, such as files, trees (also known as directories or folders), commits, and other objects typically found in version control systems. The syntax of the identifiers is defined in the [SWHID specification](https://www.swhid.org/specification/v1.1/4.Syntax) and they typically look like `swh:1:cnt:94a9ed024d3859793618152ea559a168bbcbb5e2`."
          },
          "swid": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalIdentifierType/swid",
            "name": "swid",
            "summary": "https://www.ietf.org/archive/id/draft-ietf-sacm-coswid-21.html#section-2.3"
          },
          "urlScheme": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalIdentifierType/urlScheme",
            "name": "urlScheme",
            "summary": "the scheme used in order to locate a resource https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml"
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalIdentifierType",
        "name": "ExternalIdentifierType",
        "profile": "Core",
        "summary": "Specifies the type of an external identifier."
      },
      "ExternalRefType": {
        "description": "ExternalRefType specifies the type of an external reference.",
        "entries": {
          "altDownloadLocation": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/altDownloadLocation",
            "name": "altDownloadLocation",
            "summary": "A reference to an alternative download location."
          },
          "altWebPage": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/altWebPage",
            "name": "altWebPage",
            "summary": "A reference to an alternative web page."
          },
          "binaryArtifact": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/binaryArtifact",
            "name": "binaryArtifact",
            "summary": "A reference to binary artifacts related to a package."
          },
          "bower": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/bower",
            "name": "bower",
            "summary": "A reference to a bower package."
          },
          "buildMeta": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/buildMeta",
            "name": "buildMeta",
            "summary": "A reference build metadata related to a published package."
          },
          "buildSystem": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/buildSystem",
            "name": "buildSystem",
            "summary": "A reference build system used to create or publish the package."
          },
          "certificationReport": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/certificationReport",
            "name": "certificationReport",
            "summary": "A reference to a certification report for a package from an accredited/independent body."
          },
          "chat": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/chat",
            "name": "chat",
            "summary": "A reference to the instant messaging system used by the maintainer for a package."
          },
          "componentAnalysisReport": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/componentAnalysisReport",
            "name": "componentAnalysisReport",
            "summary": "A reference to a Software Composition Analysis (SCA) report."
          },
          "cwe": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/cwe",
            "name": "cwe",
            "summary": "A reference to a source of software flaw defined within the official CWE Dictionary that conforms to the CWE specification as defined by https://csrc.nist.gov/glossary/term/common_weakness_enumeration."
          },
          "documentation": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/documentation",
            "name": "documentation",
            "summary": "A reference to the documentation for a package."
          },
          "dynamicAnalysisReport": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/dynamicAnalysisReport",
            "name": "dynamicAnalysisReport",
            "summary": "A reference to a dynamic analysis report for a package."
          },
          "eolNotice": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/eolNotice",
            "name": "eolNotice",
            "summary": "A reference to the End Of Sale (EOS) and/or End Of Life (EOL) information related to a package."
          },
          "exportControlAssessment": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/exportControlAssessment",
            "name": "exportControlAssessment",
            "summary": "A reference to a export control assessment for a package."
          },
          "funding": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/funding",
            "name": "funding",
            "summary": "A reference to funding information related to a package."
          },
          "issueTracker": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/issueTracker",
            "name": "issueTracker",
            "summary": "A reference to the issue tracker for a package."
          },
          "license": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/license",
            "name": "license",
            "summary": "A reference to additional license information related to an artifact."
          },
          "mailingList": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/mailingList",
            "name": "mailingList",
            "summary": "A reference to the mailing list used by the maintainer for a package."
          },
          "mavenCentral": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/mavenCentral",
            "name": "mavenCentral",
            "summary": "A reference to a maven repository artifact."
          },
          "metrics": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/metrics",
            "name": "metrics",
            "summary": "A reference to metrics related to package such as OpenSSF scorecards."
          },
          "npm": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/npm",
            "name": "npm",
            "summary": "A reference to an npm package."
          },
          "nuget": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/nuget",
            "name": "nuget",
            "summary": "A reference to a nuget package."
          },
          "other": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/other",
            "name": "other",
            "summary": "Used when the type doesn't match any of the other options."
          },
          "privacyAssessment": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/privacyAssessment",
            "name": "privacyAssessment",
            "summary": "A reference to a privacy assessment for a package."
          },
          "productMetadata": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/productMetadata",
            "name": "productMetadata",
            "summary": "A reference to additional product metadata such as reference within organization's product catalog."
          },
          "purchaseOrder": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/purchaseOrder",
            "name": "purchaseOrder",
            "summary": "A reference to a purchase order for a package."
          },
          "qualityAssessmentReport": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/qualityAssessmentReport",
            "name": "qualityAssessmentReport",
            "summary": "A reference to a quality assessment for a package."
          },
          "releaseHistory": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/releaseHistory",
            "name": "releaseHistory",
            "summary": "A reference to a published list of releases for a package."
          },
          "releaseNotes": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/releaseNotes",
            "name": "releaseNotes",
            "summary": "A reference to the release notes for a package."
          },
          "riskAssessment": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/riskAssessment",
            "name": "riskAssessment",
            "summary": "A reference to a risk assessment for a package."
          },
          "runtimeAnalysisReport": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/runtimeAnalysisReport",
            "name": "runtimeAnalysisReport",
            "summary": "A reference to a runtime analysis report for a package."
          },
          "secureSoftwareAttestation": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/secureSoftwareAttestation",
            "name": "secureSoftwareAttestation",
            "summary": "A reference to information assuring that the software is developed using security practices as defined by [NIST SP 800-218 Secure Software Development Framework (SSDF) Version 1.1](https://csrc.nist.gov/pubs/sp/800/218/final) or [CISA Secure Software Development Attestation Form](https://www.cisa.gov/resources-tools/resources/secure-software-development-attestation-form)."
          },
          "securityAdversaryModel": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/securityAdversaryModel",
            "name": "securityAdversaryModel",
            "summary": "A reference to the security adversary model for a package."
          },
          "securityAdvisory": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/securityAdvisory",
            "name": "securityAdvisory",
            "summary": "A reference to a published security advisory (where advisory as defined per ISO 29147:2018) that may affect one or more elements, e.g., vendor advisories or specific NVD entries."
          },
          "securityFix": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/securityFix",
            "name": "securityFix",
            "summary": "A reference to the patch or source code that fixes a vulnerability."
          },
          "securityOther": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/securityOther",
            "name": "securityOther",
            "summary": "A reference to related security information of unspecified type."
          },
          "securityPenTestReport": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/securityPenTestReport",
            "name": "securityPenTestReport",
            "summary": "A reference to a [penetration test](https://en.wikipedia.org/wiki/Penetration_test) report for a package."
          },
          "securityPolicy": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/securityPolicy",
            "name": "securityPolicy",
            "summary": "A reference to instructions for reporting newly discovered security vulnerabilities for a package."
          },
          "securityThreatModel": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/securityThreatModel",
            "name": "securityThreatModel",
            "summary": "A reference the [security threat model](https://en.wikipedia.org/wiki/Threat_model) for a package."
          },
          "socialMedia": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/socialMedia",
            "name": "socialMedia",
            "summary": "A reference to a social media channel for a package."
          },
          "sourceArtifact": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/sourceArtifact",
            "name": "sourceArtifact",
            "summary": "A reference to an artifact containing the sources for a package."
          },
          "staticAnalysisReport": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/staticAnalysisReport",
            "name": "staticAnalysisReport",
            "summary": "A reference to a static analysis report for a package."
          },
          "support": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/support",
            "name": "support",
            "summary": "A reference to the software support channel or other support information for a package."
          },
          "vcs": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/vcs",
            "name": "vcs",
            "summary": "A reference to a version control system related to a software artifact."
          },
          "vulnerabilityDisclosureReport": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/vulnerabilityDisclosureReport",
            "name": "vulnerabilityDisclosureReport",
            "summary": "A reference to a Vulnerability Disclosure Report (VDR) which provides the software supplier's analysis and findings describing the impact (or lack of impact) that reported vulnerabilities have on packages or products in the supplier's SBOM as defined in [NIST SP 800-161](https://csrc.nist.gov/pubs/sp/800/161/r1/final)."
          },
          "vulnerabilityExploitabilityAssessment": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType/vulnerabilityExploitabilityAssessment",
            "name": "vulnerabilityExploitabilityAssessment",
            "summary": "A reference to a Vulnerability Exploitability eXchange (VEX) statement which provides information on whether a product is impacted by a specific vulnerability in an included package and, if affected, whether there are actions recommended to remediate. See also [NTIA VEX one-page summary](https://ntia.gov/files/ntia/publications/vex_one-page_summary.pdf)."
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ExternalRefType",
        "name": "ExternalRefType",
        "profile": "Core",
        "summary": "Specifies the type of an external reference."
      },
      "HashAlgorithm": {
        "description": "A HashAlgorithm is a mathematical algorithm that maps data of arbitrary size to a bit string (the hash)\nand is a one-way function, that is, a function which is practically infeasible to invert.",
        "entries": {
          "blake2b256": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/blake2b256",
            "name": "blake2b256",
            "summary": "blake2b algorithm with a digest size of 256 https://datatracker.ietf.org/doc/html/rfc7693#section-4"
          },
          "blake2b384": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/blake2b384",
            "name": "blake2b384",
            "summary": "blake2b algorithm with a digest size of 384 https://datatracker.ietf.org/doc/html/rfc7693#section-4"
          },
          "blake2b512": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/blake2b512",
            "name": "blake2b512",
            "summary": "blake2b algorithm with a digest size of 512 https://datatracker.ietf.org/doc/html/rfc7693#section-4"
          },
          "blake3": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/blake3",
            "name": "blake3",
            "summary": "https://github.com/BLAKE3-team/BLAKE3-specs/blob/master/blake3.pdf"
          },
          "crystalsDilithium": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/crystalsDilithium",
            "name": "crystalsDilithium",
            "summary": "https://pq-crystals.org/dilithium/index.shtml"
          },
          "crystalsKyber": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/crystalsKyber",
            "name": "crystalsKyber",
            "summary": "https://pq-crystals.org/kyber/index.shtml"
          },
          "falcon": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/falcon",
            "name": "falcon",
            "summary": "https://falcon-sign.info/falcon.pdf"
          },
          "md2": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/md2",
            "name": "md2",
            "summary": "https://datatracker.ietf.org/doc/rfc1319/"
          },
          "md4": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/md4",
            "name": "md4",
            "summary": "https://datatracker.ietf.org/doc/html/rfc1186"
          },
          "md5": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/md5",
            "name": "md5",
            "summary": "https://datatracker.ietf.org/doc/html/rfc1321"
          },
          "md6": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/md6",
            "name": "md6",
            "summary": "https://people.csail.mit.edu/rivest/pubs/RABCx08.pdf"
          },
          "other": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/other",
            "name": "other",
            "summary": "any hashing algorithm that does not exist in this list of entries"
          },
          "sha1": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/sha1",
            "name": "sha1",
            "summary": "https://datatracker.ietf.org/doc/html/rfc3174"
          },
          "sha224": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/sha224",
            "name": "sha224",
            "summary": "secure hashing algorithm with a digest length of 224 https://datatracker.ietf.org/doc/html/draft-ietf-pkix-sha224-01"
          },
          "sha256": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/sha256",
            "name": "sha256",
            "summary": "secure hashing algorithm with a digest length of 256 https://www.rfc-editor.org/rfc/rfc4634"
          },
          "sha384": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/sha384",
            "name": "sha384",
            "summary": "secure hashing algorithm with a digest length of 384 https://www.rfc-editor.org/rfc/rfc4634"
          },
          "sha3_224": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/sha3_224",
            "name": "sha3_224",
            "summary": "sha3 with a digest length of 224 https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf"
          },
          "sha3_256": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/sha3_256",
            "name": "sha3_256",
            "summary": "sha3 with a digest length of 256 https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf"
          },
          "sha3_384": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/sha3_384",
            "name": "sha3_384",
            "summary": "sha3 with a digest length of 384 https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf"
          },
          "sha3_512": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/sha3_512",
            "name": "sha3_512",
            "summary": "sha3 with a digest length of 512 https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf"
          },
          "sha512": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm/sha512",
            "name": "sha512",
            "summary": "secure hashing algorithm with a digest length of 512 https://www.rfc-editor.org/rfc/rfc4634"
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/HashAlgorithm",
        "name": "HashAlgorithm",
        "profile": "Core",
        "summary": "A mathematical algorithm that maps data of arbitrary size to a bit string."
      },
      "LifecycleScopeType": {
        "description": "This enumeration summarizes common phases when dependency and other relationships, have different implications, based on their context.  For example,  a build dependency, may have different implications than a operational dependency.",
        "entries": {
          "build": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/LifecycleScopeType/build",
            "name": "build",
            "summary": "A relationship has specific context implications during an element's build phase, during development."
          },
          "design": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/LifecycleScopeType/design",
            "name": "design",
            "summary": "A relationship has specific context implications during an element's design."
          },
          "development": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/LifecycleScopeType/development",
            "name": "development",
            "summary": "A relationship has specific context implications during development phase of an element."
          },
          "other": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/LifecycleScopeType/other",
            "name": "other",
            "summary": "A relationship has other specific context information necessary to capture that the above set of enumerations does not handle."
          },
          "runtime": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/LifecycleScopeType/runtime",
            "name": "runtime",
            "summary": "A relationship has specific context implications during the execution phase of an element."
          },
          "test": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/LifecycleScopeType/test",
            "name": "test",
            "summary": "A relationship has specific context implications during an element's testing phase, during development."
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/LifecycleScopeType",
        "name": "LifecycleScopeType",
        "profile": "Core",
        "summary": "Provide an enumerated set of lifecycle phases that can provide context to relationships."
      },
      "PresenceType": {
        "description": "This type is used to indicate if a given field is present or absent or unknown.",
        "entries": {
          "no": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/PresenceType/no",
            "name": "no",
            "summary": "Indicates absence of the field."
          },
          "noAssertion": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/PresenceType/noAssertion",
            "name": "noAssertion",
            "summary": "Makes no assertion about the field."
          },
          "yes": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/PresenceType/yes",
            "name": "yes",
            "summary": "Indicates presence of the field."
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/PresenceType",
        "name": "PresenceType",
        "profile": "Core",
        "summary": "Categories of presence or absence."
      },
      "ProfileIdentifierType": {
        "description": "There are a set of profiles that have been defined by a profile team.\nA profile consists of a namespace that may add properties and classes to the core profile unique to the domain covered by the profile.\nThe profile may also contain additional restrictions on existing properties and classes defined in other profiles.\nIf the creator of an SPDX collection of elements includes a profile in the list of conformanceProfiles, they are claiming that all contained elements conform to all restrictions defined for that profile.",
        "entries": {
          "ai": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ProfileIdentifierType/ai",
            "name": "ai",
            "summary": "the element follows the AI profile specification"
          },
          "build": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ProfileIdentifierType/build",
            "name": "build",
            "summary": "the element follows the Build profile specification"
          },
          "core": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ProfileIdentifierType/core",
            "name": "core",
            "summary": "the element follows the Core profile specification"
          },
          "dataset": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ProfileIdentifierType/dataset",
            "name": "dataset",
            "summary": "the element follows the Dataset profile specification"
          },
          "expandedLicensing": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ProfileIdentifierType/expandedLicensing",
            "name": "expandedLicensing",
            "summary": "the element follows the expanded Licensing profile specification"
          },
          "extension": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ProfileIdentifierType/extension",
            "name": "extension",
            "summary": "the element follows the Extension profile specification"
          },
          "security": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ProfileIdentifierType/security",
            "name": "security",
            "summary": "the element follows the Security profile specification"
          },
          "simpleLicensing": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ProfileIdentifierType/simpleLicensing",
            "name": "simpleLicensing",
            "summary": "the element follows the simple Licensing profile specification"
          },
          "software": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ProfileIdentifierType/software",
            "name": "software",
            "summary": "the element follows the Software profile specification"
          },
          "usage": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ProfileIdentifierType/usage",
            "name": "usage",
            "summary": "the element follows the Usage profile specification"
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/ProfileIdentifierType",
        "name": "ProfileIdentifierType",
        "profile": "Core",
        "summary": "Enumeration of the valid profiles."
      },
      "RelationshipCompleteness": {
        "description": "RelationshipCompleteness indicates whether the provided relationship is known to be complete, known to be incomplete, or if no assertion is made by the relationship creator.",
        "entries": {
          "complete": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipCompleteness/complete",
            "name": "complete",
            "summary": "The relationship is known to be exhaustive."
          },
          "incomplete": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipCompleteness/incomplete",
            "name": "incomplete",
            "summary": "The relationship is known not to be exhaustive."
          },
          "noAssertion": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipCompleteness/noAssertion",
            "name": "noAssertion",
            "summary": "No assertion can be made about the completeness of the relationship."
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipCompleteness",
        "name": "RelationshipCompleteness",
        "profile": "Core",
        "summary": "Indicates whether a relationship is known to be complete, incomplete, or if no assertion is made with respect to relationship completeness."
      },
      "RelationshipType": {
        "description": "Provides information about the relationship between two Elements.\nFor example, you can represent a relationship between two different Files,\nbetween a Package and a File, between two Packages, or between one SPDXDocument and another SPDXDocument.\n\nRelationship names be descriptive enough to easily deduce the correct direction\nfrom their name. The best way to do this is to make sure that the relationship\nname completes the sentence:\n\n`from` (is) (a) `RELATIONSHIP` `to`",
        "entries": {
          "affects": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/affects",
            "name": "affects",
            "summary": "(Security/VEX) The `from` vulnerability affect each `to` Element"
          },
          "amendedBy": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/amendedBy",
            "name": "amendedBy",
            "summary": "The `from` Element is amended by each `to` Element"
          },
          "ancestorOf": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/ancestorOf",
            "name": "ancestorOf",
            "summary": "The `from` Element is an ancestor of each `to` Element"
          },
          "availableFrom": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/availableFrom",
            "name": "availableFrom",
            "summary": "The `from` Element is available from the additional supplier described by each `to` Element"
          },
          "configures": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/configures",
            "name": "configures",
            "summary": "The `from` Element is a configuration applied to each `to` Element during a LifecycleScopeType period"
          },
          "contains": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/contains",
            "name": "contains",
            "summary": "The `from` Element contains each `to` Element"
          },
          "coordinatedBy": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/coordinatedBy",
            "name": "coordinatedBy",
            "summary": "(Security) The `from` Vulnerability is coordinatedBy the `to` Agent(s) (vendor, researcher, or consumer agent)"
          },
          "copiedTo": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/copiedTo",
            "name": "copiedTo",
            "summary": "The `from` Element has been copied to each `to` Element"
          },
          "delegatedTo": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/delegatedTo",
            "name": "delegatedTo",
            "summary": "The `from` Agent is delegating an action to the Agent of the `to` Relationship (which must be of type invokedBy) during a LifecycleScopeType. (e.g. the `to` invokedBy Relationship is being done on behalf of `from`)"
          },
          "dependsOn": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/dependsOn",
            "name": "dependsOn",
            "summary": "The `from` Element depends on each `to` Element during a LifecycleScopeType period."
          },
          "descendantOf": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/descendantOf",
            "name": "descendantOf",
            "summary": "The `from` Element is a descendant of each `to` Element"
          },
          "describes": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/describes",
            "name": "describes",
            "summary": "The `from` Element describes each `to` Element. To denote the root(s) of a tree of elements in a collection, the rootElement property should be used."
          },
          "doesNotAffect": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/doesNotAffect",
            "name": "doesNotAffect",
            "summary": "(Security/VEX) The `from` Vulnerability has no impact on each `to` Element"
          },
          "expandsTo": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/expandsTo",
            "name": "expandsTo",
            "summary": "The `from` archive expands out as an artifact described by each `to` Element"
          },
          "exploitCreatedBy": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/exploitCreatedBy",
            "name": "exploitCreatedBy",
            "summary": "(Security) The `from` Vulnerability has had an exploit created against it by each `to` Agent"
          },
          "fixedBy": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/fixedBy",
            "name": "fixedBy",
            "summary": "(Security) Designates a `from` Vulnerability has been fixed by the `to` Agent(s)"
          },
          "fixedIn": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/fixedIn",
            "name": "fixedIn",
            "summary": "(Security/VEX) A `from` Vulnerability has been fixed in each of the `to` Element(s)"
          },
          "foundBy": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/foundBy",
            "name": "foundBy",
            "summary": "(Security) Designates a `from` Vulnerability was originally discovered by the `to` Agent(s)"
          },
          "generates": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/generates",
            "name": "generates",
            "summary": "The `from` Element generates each `to` Element"
          },
          "hasAddedFile": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasAddedFile",
            "name": "hasAddedFile",
            "summary": "Every `to` Element is is a file added to the `from` Element (`from` hasAddedFile `to`)"
          },
          "hasAssessmentFor": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasAssessmentFor",
            "name": "hasAssessmentFor",
            "summary": "(Security) Relates a `from` Vulnerability and each `to` Element(s) with a security assessment. To be used with `VulnAssessmentRelationship` types"
          },
          "hasAssociatedVulnerability": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasAssociatedVulnerability",
            "name": "hasAssociatedVulnerability",
            "summary": "(Security) Used to associate a `from` Artifact with each `to` Vulnerability"
          },
          "hasConcludedLicense": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasConcludedLicense",
            "name": "hasConcludedLicense",
            "summary": "The `from` Software Artifact is concluded by the SPDX data creator to be governed by each `to` license"
          },
          "hasDataFile": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasDataFile",
            "name": "hasDataFile",
            "summary": "The `from` Element treats each `to` Element as a data file"
          },
          "hasDeclaredLicense": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasDeclaredLicense",
            "name": "hasDeclaredLicense",
            "summary": "The `from` Software Artifact was discovered to actually contain each `to` license, for example as detected by use of automated tooling."
          },
          "hasDeletedFile": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasDeletedFile",
            "name": "hasDeletedFile",
            "summary": "Every `to` Element is a file deleted from the `from` Element (`from` hasDeletedFile `to`)"
          },
          "hasDependencyManifest": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasDependencyManifest",
            "name": "hasDependencyManifest",
            "summary": "The `from` Element has manifest files that contain dependency information in each `to` Element"
          },
          "hasDistributionArtifact": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasDistributionArtifact",
            "name": "hasDistributionArtifact",
            "summary": "The `from` Element is distributed as an artifact in each Element `to`, (e.g. an RPM or archive file)"
          },
          "hasDocumentation": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasDocumentation",
            "name": "hasDocumentation",
            "summary": "The `from` Element is documented by each `to` Element"
          },
          "hasDynamicLink": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasDynamicLink",
            "name": "hasDynamicLink",
            "summary": "The `from` Element dynamically links in each `to` Element, during a LifecycleScopeType period."
          },
          "hasEvidence": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasEvidence",
            "name": "hasEvidence",
            "summary": "(Dataset) Every `to` Element is considered as evidence for the `from` Element (`from` hasEvidence `to`)"
          },
          "hasExample": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasExample",
            "name": "hasExample",
            "summary": "Every `to` Element is an example for the `from` Element (`from` hasExample `to`)"
          },
          "hasHost": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasHost",
            "name": "hasHost",
            "summary": "The `from` Build was run on the `to` Element during a LifecycleScopeType period (e.g. The host that the build runs on)"
          },
          "hasInputs": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasInputs",
            "name": "hasInputs",
            "summary": "The `from` Build has each `to` Elements as an input during a LifecycleScopeType period."
          },
          "hasMetadata": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasMetadata",
            "name": "hasMetadata",
            "summary": "Every `to` Element is metadata about the `from` Element (`from` hasMetadata `to`)"
          },
          "hasOptionalComponent": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasOptionalComponent",
            "name": "hasOptionalComponent",
            "summary": "Every `to` Element is an optional component of the `from` Element (`from` hasOptionalComponent` `to`)"
          },
          "hasOptionalDependency": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasOptionalDependency",
            "name": "hasOptionalDependency",
            "summary": "The `from` Element optionally depends on each `to` Element during a LifecycleScopeType period"
          },
          "hasOutputs": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasOutputs",
            "name": "hasOutputs",
            "summary": "The `from` Build element generates each `to` Element as an output during a LifecycleScopeType period."
          },
          "hasPrerequsite": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasPrerequsite",
            "name": "hasPrerequsite",
            "summary": "The `from` Element has a prerequsite on each `to` Element, during a LifecycleScopeType period"
          },
          "hasProvidedDependency": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasProvidedDependency",
            "name": "hasProvidedDependency",
            "summary": "The `from` Element has a dependency on each `to` Element, but dependency is not in the distributed artifact, but assumed to be provided, during a LifecycleScopeType period"
          },
          "hasRequirement": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasRequirement",
            "name": "hasRequirement",
            "summary": "The `from` Element has a requirement on each `to` Element, during a LifecycleScopeType period"
          },
          "hasSpecification": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasSpecification",
            "name": "hasSpecification",
            "summary": "Every `to` Element is a specification for the `from` Element (`from` hasSpecification `to`), during a LifecycleScopeType period"
          },
          "hasStaticLink": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasStaticLink",
            "name": "hasStaticLink",
            "summary": "The `from` Element statically links in each `to` Element, during a LifecycleScopeType period"
          },
          "hasTest": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasTest",
            "name": "hasTest",
            "summary": "Every `to` Element is a test artifact for the `from` Element (`from` hasTest `to`), during a LifecycleScopeType period"
          },
          "hasTestCase": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasTestCase",
            "name": "hasTestCase",
            "summary": "Every `to` Element is a test case for the `from` Element (`from` hasTestCase `to`)"
          },
          "hasVariant": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/hasVariant",
            "name": "hasVariant",
            "summary": "Every `to` Element is a variant the `from` Element (`from` hasVariant `to`)"
          },
          "invokedBy": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/invokedBy",
            "name": "invokedBy",
            "summary": "The `from` Element was invoked by the `to` Agent during a LifecycleScopeType period (for example, a Build element that describes a build step)"
          },
          "modifiedBy": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/modifiedBy",
            "name": "modifiedBy",
            "summary": "The `from` Element is modified by each `to` Element"
          },
          "other": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/other",
            "name": "other",
            "summary": "Every `to` Element is related to the `from` Element where the relationship type is not described by any of the SPDX relationhip types (this relationship is directionless)"
          },
          "packagedBy": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/packagedBy",
            "name": "packagedBy",
            "summary": "Every `to` Element is a packaged instance of the `from` Element (`from` packagedBy `to`)"
          },
          "patchedBy": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/patchedBy",
            "name": "patchedBy",
            "summary": "Every `to` Element is a patch for the `from` Element (`from` patchedBy `to`)"
          },
          "publishedBy": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/publishedBy",
            "name": "publishedBy",
            "summary": "(Security) Designates a `from` Vulnerability was made available for public use or reference by each `to` Agent"
          },
          "reportedBy": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/reportedBy",
            "name": "reportedBy",
            "summary": "(Security) Designates a `from` Vulnerability was first reported to a project, vendor, or tracking database for formal identification by each `to` Agent"
          },
          "republishedBy": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/republishedBy",
            "name": "republishedBy",
            "summary": "(Security) Designates a `from` Vulnerability's details were tracked, aggregated, and/or enriched to improve context (i.e. NVD) by a `to` Agent(s)"
          },
          "serializedInArtifact": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/serializedInArtifact",
            "name": "serializedInArtifact",
            "summary": "The `from` SPDXDocument can be found in a serialized form in each `to` Artifact"
          },
          "testedOn": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/testedOn",
            "name": "testedOn",
            "summary": "(AI, Dataset) The `from` Element has been tested on the `to` Element"
          },
          "trainedOn": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/trainedOn",
            "name": "trainedOn",
            "summary": "(AI, Dataset) The `from` Element has been trained by the `to` Element(s)"
          },
          "underInvestigationFor": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/underInvestigationFor",
            "name": "underInvestigationFor",
            "summary": "(Security/VEX) The `from` Vulnerability impact is being investigated for each `to` Element"
          },
          "usesTool": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType/usesTool",
            "name": "usesTool",
            "summary": "The `from` Element uses each `to` Element as a tool during a LifecycleScopeType period."
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/RelationshipType",
        "name": "RelationshipType",
        "profile": "Core",
        "summary": "Information about the relationship between two Elements."
      },
      "SupportType": {
        "description": "SupportType is an enumeration of the various types of support commonly found for artifacts in the software supply chain. Specific details of what that support entails are provided by agreements between the producer and consumer of the artifact.",
        "entries": {
          "deployed": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/SupportType/deployed",
            "name": "deployed",
            "summary": "in addition to being supported by the supplier, the software is known to have been deployed and is in use.  For a software as a service provider, this implies the software is now available as a service."
          },
          "development": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/SupportType/development",
            "name": "development",
            "summary": "the artifact is in active development and is not considered ready for formal support from the supplier."
          },
          "endOfSupport": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/SupportType/endOfSupport",
            "name": "endOfSupport",
            "summary": "there is a defined end of support for the artifact from the supplier.  This may also be referred to as end of life. There is a validUntilDate that can be used to signal when support ends for the artifact."
          },
          "limitedSupport": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/SupportType/limitedSupport",
            "name": "limitedSupport",
            "summary": "the artifact has been released, and there is limited support available from the supplier. There is a validUntilDate that can provide additional information about the duration of support."
          },
          "noAssertion": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/SupportType/noAssertion",
            "name": "noAssertion",
            "summary": "no assertion about the type of support is made.   This is considered the default if no other support type is used."
          },
          "noSupport": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/SupportType/noSupport",
            "name": "noSupport",
            "summary": "there is no support for the artifact from the supplier, consumer assumes any support obligations."
          },
          "support": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Core/SupportType/support",
            "name": "support",
            "summary": "the artifact has been released, and is supported from the supplier.   There is a validUntilDate that can provide additional information about the duration of support."
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Core/SupportType",
        "name": "SupportType",
        "profile": "Core",
        "summary": "Indicates the type of support that is associated with an artifact."
      }
    }
  },
  "Dataset": {
    "classes": {
      "DatasetPackage": {
        "abstract": false,
        "description": "Metadata information that can be added to a dataset that may be used in a software or to train/test an AI package.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetPackage",
        "name": "DatasetPackage",
        "profile": "Dataset",
        "properties": {
          "anonymizationMethodUsed": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Dataset/anonymizationMethodUsed"
          },
          "confidentialityLevel": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Dataset/confidentialityLevel"
          },
          "dataCollectionProcess": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Dataset/dataCollectionProcess"
          },
          "dataPreprocessing": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Dataset/dataPreprocessing"
          },
          "datasetAvailability": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Dataset/datasetAvailability"
          },
          "datasetNoise": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Dataset/datasetNoise"
          },
          "datasetSize": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Dataset/datasetSize"
          },
          "datasetType": {
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Dataset/datasetType"
          },
          "datasetUpdateMechanism": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Dataset/datasetUpdateMechanism"
          },
          "hasSensitivePersonalInformation": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Dataset/hasSensitivePersonalInformation"
          },
          "intendedUse": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Dataset/intendedUse"
          },
          "knownBias": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Dataset/knownBias"
          },
          "sensor": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Dataset/sensor"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Software/Package",
        "summary": "Specifies a data package and its associated information."
      }
    },
    "description": "The Dataset namespace defines concepts related to dataset, including its preparation process, its characteristics, and its access methods.",
    "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset",
    "properties": {
      "anonymizationMethodUsed": {
        "datatype": "string",
        "description": "A free-form text that describes the methods used to anonymize the dataset (of fields in the dataset).",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/anonymizationMethodUsed",
        "name": "anonymizationMethodUsed",
        "profile": "Dataset",
        "summary": "Describes the anonymization methods used."
      },
      "confidentialityLevel": {
        "description": "Describes the levels of confidentiality of the data points contained in the dataset.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/confidentialityLevel",
        "name": "confidentialityLevel",
        "profile": "Dataset",
        "range": "https://spdx.org/rdf/3.0.0/terms/Dataset/ConfidentialityLevelType",
        "summary": "Describes the confidentiality level of the data points contained in the dataset."
      },
      "dataCollectionProcess": {
        "datatype": "string",
        "description": "A free-form text that describes how a dataset was collected.\n\nExamples include the sources from which a dataset was scrapped and\nthe interview protocol that was used for data collection.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/dataCollectionProcess",
        "name": "dataCollectionProcess",
        "profile": "Dataset",
        "summary": "Describes how the dataset was collected."
      },
      "dataPreprocessing": {
        "datatype": "string",
        "description": "A free-form text that describes the various preprocessing steps\nthat were applied to the raw data to create the dataset.\n\nExamples include standardization, normalization, deduplication, tokenization, and removal of tokens.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/dataPreprocessing",
        "name": "dataPreprocessing",
        "profile": "Dataset",
        "summary": "Describes the preprocessing steps that were applied to the raw data to create the given dataset."
      },
      "datasetAvailability": {
        "description": "Some datasets are publicly available and can be downloaded directly. Others are only accessible behind a clickthrough, or after filling a registration form. This field will describe the dataset availability from that perspective.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/datasetAvailability",
        "name": "datasetAvailability",
        "profile": "Dataset",
        "range": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetAvailabilityType",
        "summary": "The field describes the availability of a dataset."
      },
      "datasetNoise": {
        "datatype": "string",
        "description": "Describes what kinds of noises a dataset might encompass.\n\nThe free-form text specifies fields or samples that might be noisy.\n\nAlternatively, it can also be used to describe various noises that could impact the whole dataset.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/datasetNoise",
        "name": "datasetNoise",
        "profile": "Dataset",
        "summary": "Describes potentially noisy elements of the dataset."
      },
      "datasetSize": {
        "datatype": "nonNegativeInteger",
        "description": "Captures how large a dataset is.\n\nThe size is to be measured in bytes.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/datasetSize",
        "name": "datasetSize",
        "profile": "Dataset",
        "summary": "Captures the size of the dataset."
      },
      "datasetType": {
        "description": "Describes the datatype contained in the dataset. \n\nFor example, a dataset can be an image dataset for computer vision applications, a text dataset such as the contents of a book or Wikipedia article, or sometimes a multimodal dataset that contains multiple types of data.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/datasetType",
        "name": "datasetType",
        "profile": "Dataset",
        "range": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetType",
        "summary": "Describes the type of the given dataset."
      },
      "datasetUpdateMechanism": {
        "datatype": "string",
        "description": "A free-form text that describes a mechanism to update the dataset.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/datasetUpdateMechanism",
        "name": "datasetUpdateMechanism",
        "profile": "Dataset",
        "summary": "Describes a mechanism to update the dataset."
      },
      "hasSensitivePersonalInformation": {
        "description": "Indicates the presence of sensitive personal data\nor information that allows drawing conclusions about a person's identity.\n\nRelated: `useSensitivePersonalInformation` in `/AI/AIPackage`",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/hasSensitivePersonalInformation",
        "name": "hasSensitivePersonalInformation",
        "profile": "Dataset",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/PresenceType",
        "summary": "Describes if any sensitive personal information is present in the dataset."
      },
      "intendedUse": {
        "datatype": "string",
        "description": "A free-form text that describes what the given dataset should be used for.\n\nSome datasets are collected to be used only for particular purposes.\n\nFor example, medical data collected from a specific demography might only be applicable\nfor training machine learning models to make predictions for that demography.\nIn such a case, the intendedUse field would capture this information.\nSimilarly, if a dataset is collected for building a facial recognition model,\nthe intendedUse field would specify that.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/intendedUse",
        "name": "intendedUse",
        "profile": "Dataset",
        "summary": "Describes what the given dataset should be used for."
      },
      "knownBias": {
        "datatype": "string",
        "description": "A free-form text that describes the different biases that the dataset encompasses.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/knownBias",
        "name": "knownBias",
        "profile": "Dataset",
        "summary": "Records the biases that the dataset is known to encompass."
      },
      "sensor": {
        "description": "Describes a sensor that was used for collecting the data\nand its calibration value as a key-value pair.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/sensor",
        "name": "sensor",
        "profile": "Dataset",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/DictionaryEntry",
        "summary": "Describes a sensor used for collecting the data."
      }
    },
    "summary": "The Dataset Profile provides additional metadata, based on Software Profile, that is useful for datasets.",
    "vocabularies": {
      "ConfidentialityLevelType": {
        "description": "Describes the different confidentiality levels as given by the [Traffic Light Protocol](https://en.wikipedia.org/wiki/Traffic_Light_Protocol).",
        "entries": {
          "amber": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/ConfidentialityLevelType/amber",
            "name": "amber",
            "summary": "Data points in the dataset can be shared only with specific organizations and their clients on a need to know basis."
          },
          "clear": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/ConfidentialityLevelType/clear",
            "name": "clear",
            "summary": "Dataset may be distributed freely, without restriction."
          },
          "green": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/ConfidentialityLevelType/green",
            "name": "green",
            "summary": "Dataset can be shared within a community of peers and partners."
          },
          "red": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/ConfidentialityLevelType/red",
            "name": "red",
            "summary": "Data points in the dataset are highly confidential and can only be shared with named recipients."
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/ConfidentialityLevelType",
        "name": "ConfidentialityLevelType",
        "profile": "Dataset",
        "summary": "Categories of confidentiality level."
      },
      "DatasetAvailabilityType": {
        "description": "Describes the possible types of availability of a dataset, indicating whether the dataset can be directly downloaded, can be assembled using a script for scraping the data, is only available after a clickthrough or a registration form.",
        "entries": {
          "clickthrough": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetAvailabilityType/clickthrough",
            "name": "clickthrough",
            "summary": "the dataset is not publicly available and can only be accessed after affirmatively accepting terms on a clickthrough webpage."
          },
          "directDownload": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetAvailabilityType/directDownload",
            "name": "directDownload",
            "summary": "the dataset is publicly available and can be downloaded directly."
          },
          "query": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetAvailabilityType/query",
            "name": "query",
            "summary": "the dataset is publicly available, but not all at once, and can only be accessed through queries which return parts of the dataset."
          },
          "registration": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetAvailabilityType/registration",
            "name": "registration",
            "summary": "the dataset is not publicly available and an email registration is required before accessing the dataset, although without an affirmative acceptance of terms."
          },
          "scrapingScript": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetAvailabilityType/scrapingScript",
            "name": "scrapingScript",
            "summary": "the dataset provider is not making available the underlying data and the dataset must be reassembled, typically using the provided script for scraping the data."
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetAvailabilityType",
        "name": "DatasetAvailabilityType",
        "profile": "Dataset",
        "summary": "Availability of dataset"
      },
      "DatasetType": {
        "description": "Describes the different structures of data within a given dataset. A dataset can have multiple types of data, or even a single type of data but still match multiple types, for example sensor data could also be timeseries or labeled image data could also be considered categorical.",
        "entries": {
          "audio": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetType/audio",
            "name": "audio",
            "summary": "data is audio based, such as a collection of music from the 80s."
          },
          "categorical": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetType/categorical",
            "name": "categorical",
            "summary": "data that is classified into a discrete number of categories, such as the eye color of a population of people."
          },
          "graph": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetType/graph",
            "name": "graph",
            "summary": "data is in the form of a graph where entries are somehow related to each other through edges, such a social network of friends."
          },
          "image": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetType/image",
            "name": "image",
            "summary": "data is a collection of images such as pictures of animals."
          },
          "noAssertion": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetType/noAssertion",
            "name": "noAssertion",
            "summary": "data type is not known."
          },
          "numeric": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetType/numeric",
            "name": "numeric",
            "summary": "data consists only of numeric entries."
          },
          "other": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetType/other",
            "name": "other",
            "summary": "data is of a type not included in this list."
          },
          "sensor": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetType/sensor",
            "name": "sensor",
            "summary": "data is recorded from a physical sensor, such as a thermometer reading or biometric device."
          },
          "structured": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetType/structured",
            "name": "structured",
            "summary": "data is stored in tabular format or retrieved from a relational database."
          },
          "syntactic": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetType/syntactic",
            "name": "syntactic",
            "summary": "data describes the syntax or semantics of a language or text, such as a parse tree used for natural language processing."
          },
          "text": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetType/text",
            "name": "text",
            "summary": "data consists of unstructured text, such as a book, Wikipedia article (without images), or transcript."
          },
          "timeseries": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetType/timeseries",
            "name": "timeseries",
            "summary": "data is recorded in an ordered sequence of timestamped entries, such as the price of a stock over the course of a day."
          },
          "timestamp": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetType/timestamp",
            "name": "timestamp",
            "summary": "data is recorded with a timestamp for each entry, but not necessarily ordered or at specific intervals, such as when a taxi ride starts and ends."
          },
          "video": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetType/video",
            "name": "video",
            "summary": "data is video based, such as a collection of movie clips featuring Tom Hanks."
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Dataset/DatasetType",
        "name": "DatasetType",
        "profile": "Dataset",
        "summary": "Enumeration of dataset types."
      }
    }
  },
  "ExpandedLicensing": {
    "classes": {
      "ConjunctiveLicenseSet": {
        "abstract": false,
        "description": "A ConjunctiveLicenseSet indicates that _each_ of its subsidiary\nAnyLicenseInfos apply. In other words, a ConjunctiveLicenseSet of two or\nmore licenses represents a licensing situation where _all_ of the specified\nlicenses are to be complied with. It is represented in the SPDX License\nExpression Syntax by the `AND` operator.\n\nIt is syntactically correct to specify a ConjunctiveLicenseSet where the\nsubsidiary AnyLicenseInfos may be \"incompatible\" according to a particular\ninterpretation of the corresponding Licenses. The SPDX License Expression\nSyntax does not take into account interpretation of license texts, which is\nleft to the consumer of SPDX data to determine for themselves.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/ConjunctiveLicenseSet",
        "name": "ConjunctiveLicenseSet",
        "profile": "ExpandedLicensing",
        "properties": {
          "member": {
            "minCount": "2",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/member"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/AnyLicenseInfo",
        "summary": "Portion of an AnyLicenseInfo representing a set of licensing information\nwhere all elements apply."
      },
      "CustomLicense": {
        "abstract": false,
        "description": "A CustomLicense represents a License that is not listed on the SPDX License\nList at https://spdx.org/licenses, and is therefore defined by an SPDX data\ncreator.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/CustomLicense",
        "name": "CustomLicense",
        "profile": "ExpandedLicensing",
        "properties": {},
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/License",
        "summary": "A license that is not listed on the SPDX License List."
      },
      "CustomLicenseAddition": {
        "abstract": false,
        "description": "A CustomLicenseAddition represents an addition to a License that is not listed\non the SPDX Exceptions List at https://spdx.org/licenses/exceptions-index.html,\nand is therefore defined by an SPDX data creator.\n\nIt is intended to represent additional language which is meant to be added to\na License, but which is not itself a standalone License.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/CustomLicenseAddition",
        "name": "CustomLicenseAddition",
        "profile": "ExpandedLicensing",
        "properties": {},
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/LicenseAddition",
        "summary": "A license addition that is not listed on the SPDX Exceptions List."
      },
      "DisjunctiveLicenseSet": {
        "abstract": false,
        "description": "A DisjunctiveLicenseSet indicates that _only one_ of its subsidiary\nAnyLicenseInfos is required to apply. In other words, a\nDisjunctiveLicenseSet of two or more licenses represents a licensing\nsituation where _only one_ of the specified licenses are to be complied with.\nA consumer of SPDX data would typically understand this to permit the recipient\nof the licensed content to choose which of the corresponding license they\nwould prefer to use. It is represented in the SPDX License Expression Syntax\nby the `OR` operator.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/DisjunctiveLicenseSet",
        "name": "DisjunctiveLicenseSet",
        "profile": "ExpandedLicensing",
        "properties": {
          "member": {
            "minCount": "2",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/member"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/AnyLicenseInfo",
        "summary": "Portion of an AnyLicenseInfo representing a set of licensing information\nwhere only one of the elements applies."
      },
      "ExtendableLicense": {
        "abstract": true,
        "description": "The WithAdditionOperator can have a License or an OrLaterOperator as the license property value.  This class is used for the value.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/ExtendableLicense",
        "name": "ExtendableLicense",
        "profile": "ExpandedLicensing",
        "properties": {},
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/AnyLicenseInfo",
        "summary": "Abstract class representing a License or an OrLaterOperator."
      },
      "IndividualLicensingInfo": {
        "abstract": false,
        "description": "Individuals, such as NoneLicense and NoAssertionLicense, need to reference a concrete subclass of AnyLicenseInfo.\n\nThis class provides the type used by the individuals.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/IndividualLicensingInfo",
        "name": "IndividualLicensingInfo",
        "profile": "ExpandedLicensing",
        "properties": {},
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/AnyLicenseInfo",
        "summary": "A concrete subclass of AnyLicenseInfo used by Individuals in the ExpandedLicensing profile."
      },
      "License": {
        "abstract": true,
        "description": "A License represents a license text, whether listed on the SPDX License List\n(ListedLicense) or defined by an SPDX data creator (CustomLicense).",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/License",
        "name": "License",
        "profile": "ExpandedLicensing",
        "properties": {
          "isDeprecatedLicenseId": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/isDeprecatedLicenseId"
          },
          "isFsfLibre": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/isFsfLibre"
          },
          "isOsiApproved": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/isOsiApproved"
          },
          "licenseText": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/licenseText"
          },
          "licenseXml": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/licenseXml"
          },
          "obsoletedBy": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/obsoletedBy"
          },
          "seeAlso": {
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/seeAlso"
          },
          "standardLicenseHeader": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/standardLicenseHeader"
          },
          "standardLicenseTemplate": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/standardLicenseTemplate"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/ExtendableLicense",
        "summary": "Abstract class for the portion of an AnyLicenseInfo representing a license."
      },
      "LicenseAddition": {
        "abstract": true,
        "description": "A LicenseAddition represents text which is intended to be added to a License\nas additional text, but which is not itself intended to be a standalone\nLicense.\n\nIt may be an exception which is listed on the SPDX Exceptions List\n(ListedLicenseException), or may be any other additional text (as an exception\nor otherwise) which is defined by an SPDX data creator (CustomLicenseAddition).",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/LicenseAddition",
        "name": "LicenseAddition",
        "profile": "ExpandedLicensing",
        "properties": {
          "additionText": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/additionText"
          },
          "isDeprecatedAdditionId": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/isDeprecatedAdditionId"
          },
          "licenseXml": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/licenseXml"
          },
          "obsoletedBy": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/obsoletedBy"
          },
          "seeAlso": {
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/seeAlso"
          },
          "standardAdditionTemplate": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/standardAdditionTemplate"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/Element",
        "summary": "Abstract class for additional text intended to be added to a License, but\nwhich is not itself a standalone License."
      },
      "ListedLicense": {
        "abstract": false,
        "description": "A ListedLicense represents a License that is listed on the SPDX License List\nat https://spdx.org/licenses.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/ListedLicense",
        "name": "ListedLicense",
        "profile": "ExpandedLicensing",
        "properties": {
          "deprecatedVersion": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/deprecatedVersion"
          },
          "listVersionAdded": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/listVersionAdded"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/License",
        "summary": "A license that is listed on the SPDX License List."
      },
      "ListedLicenseException": {
        "abstract": false,
        "description": "A ListedLicenseException represents an exception to a License (in other words,\nan exception to a license condition or an additional permission beyond those\ngranted in a License) which is listed on the SPDX Exceptions List at\nhttps://spdx.org/licenses/exceptions-index.html.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/ListedLicenseException",
        "name": "ListedLicenseException",
        "profile": "ExpandedLicensing",
        "properties": {
          "deprecatedVersion": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/deprecatedVersion"
          },
          "listVersionAdded": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/listVersionAdded"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/LicenseAddition",
        "summary": "A license exception that is listed on the SPDX Exceptions list."
      },
      "OrLaterOperator": {
        "abstract": false,
        "description": "An OrLaterOperator indicates that this portion of the AnyLicenseInfo\nrepresents either (1) the specified version of the corresponding License, or\n(2) any later version of that License. It is represented in the SPDX License\nExpression Syntax by the `+` operator.\n\nIt is context-dependent, and unspecified by SPDX, as to what constitutes a\n\"later version\" of any particular License. Some Licenses may not be versioned,\nor may not have clearly-defined ordering for versions. The consumer of SPDX\ndata will need to determine for themselves what meaning to attribute to a\n\"later version\" operator for a particular License.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/OrLaterOperator",
        "name": "OrLaterOperator",
        "profile": "ExpandedLicensing",
        "properties": {
          "subjectLicense": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/subjectLicense"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/ExtendableLicense",
        "summary": "Portion of an AnyLicenseInfo representing this version, or any later version,\nof the indicated License."
      },
      "WithAdditionOperator": {
        "abstract": false,
        "description": "A WithAdditionOperator indicates that the designated License is subject to the\ndesignated LicenseAddition, which might be a license exception on the SPDX\nExceptions List (ListedLicenseException) or may be other additional text\n(CustomLicenseAddition). It is represented in the SPDX License Expression\nSyntax by the `WITH` operator.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/WithAdditionOperator",
        "name": "WithAdditionOperator",
        "profile": "ExpandedLicensing",
        "properties": {
          "subjectAddition": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/subjectAddition"
          },
          "subjectExtendableLicense": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/subjectExtendableLicense"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/AnyLicenseInfo",
        "summary": "Portion of an AnyLicenseInfo representing a License which has additional\ntext applied to it."
      }
    },
    "description": "This profile supports representing a fully expanded license expression in object form.",
    "individuals": {
      "NoAssertionLicense": {
        "description": "NoAssertionLicense should be used if the SPDX creator has attempted to but cannot reach a reasonable objective determination;\nthe SPDX creator has made no attempt to determine this field; or\nthe SPDX creator has intentionally provided no information (no meaning should be implied by doing so).",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/NoAssertionLicense",
        "name": "NoAssertionLicense",
        "profile": "ExpandedLicensing",
        "range": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/IndividualLicensingInfo",
        "summary": "An Individual Value for License when no assertion can be made about its actual value."
      },
      "NoneLicense": {
        "description": "NoneLicense should be used if the SPDX creator determines there is no license available for this Artifact.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/NoneLicense",
        "name": "NoneLicense",
        "profile": "ExpandedLicensing",
        "range": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/IndividualLicensingInfo",
        "summary": "An Individual Value for License where the SPDX data creator determines that no license is present."
      }
    },
    "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing",
    "properties": {
      "additionText": {
        "datatype": "string",
        "description": "An additionText contains the plain text of the LicenseAddition, without\ntemplating or other similar markup.\n\nUsers of the additionText for a License can apply the SPDX Matching Guidelines\nwhen comparing it to another text for matching purposes.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/additionText",
        "name": "additionText",
        "profile": "ExpandedLicensing",
        "summary": "Identifies the full text of a LicenseAddition."
      },
      "deprecatedVersion": {
        "datatype": "string",
        "description": "A deprecatedVersion for a ListedLicense or ListedLicenseException on the SPDX\nLicense List specifies which version release of the License List was the first\none in which it was marked as deprecated.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/deprecatedVersion",
        "name": "deprecatedVersion",
        "profile": "ExpandedLicensing",
        "summary": "Specifies the SPDX License List version in which this license or exception\nidentifier was deprecated."
      },
      "isDeprecatedAdditionId": {
        "datatype": "boolean",
        "description": "The isDeprecatedAdditionId property specifies whether an identifier for a\nLicenseAddition has been marked as deprecated. If the property is not defined,\nthen it is presumed to be false (i.e., not deprecated).\n\nIf the LicenseAddition is included on the SPDX Exceptions List, then\nthe `deprecatedVersion` property indicates on which version release of the\nExceptions List it was first marked as deprecated.\n\n\"Deprecated\" in this context refers to deprecating the use of the\n_identifier_, not the underlying license addition. In other words, even if a\nLicenseAddition's author or steward has stated that a particular\nLicenseAddition generally should not be used, that would _not_ mean that the\nLicenseAddition's identifier is \"deprecated.\" Rather, a LicenseAddition\noperator is typically marked as \"deprecated\" when it is determined that use of\nanother identifier is preferable.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/isDeprecatedAdditionId",
        "name": "isDeprecatedAdditionId",
        "profile": "ExpandedLicensing",
        "summary": "Specifies whether an additional text identifier has been marked as deprecated."
      },
      "isDeprecatedLicenseId": {
        "datatype": "boolean",
        "description": "The isDeprecatedLicenseId property specifies whether an identifier for a\nLicense or LicenseAddition has been marked as deprecated. If the property\nis not defined, then it is presumed to be false (i.e., not deprecated).\n\nIf the License or LicenseAddition is included on the SPDX License List, then\nthe `deprecatedVersion` property indicates on which version release of the\nLicense List it was first marked as deprecated.\n\n\"Deprecated\" in this context refers to deprecating the use of the\n_identifier_, not the underlying license. In other words, even if a License's\nauthor or steward has stated that a particular License generally should not be\nused, that would _not_ mean that the License's identifier is \"deprecated.\"\nRather, a License or LicenseAddition operator is typically marked as\n\"deprecated\" when it is determined that use of another identifier is\npreferable.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/isDeprecatedLicenseId",
        "name": "isDeprecatedLicenseId",
        "profile": "ExpandedLicensing",
        "summary": "Specifies whether a license or additional text identifier has been marked as\ndeprecated."
      },
      "isFsfLibre": {
        "datatype": "boolean",
        "description": "isFsfLibre specifies whether the [Free Software Foundation FSF](https://fsf.org)\nhas listed this License as \"free\" in their commentary on licenses, located at\nthe time of this writing at https://www.gnu.org/licenses/license-list.en.html.\n\nA value of \"true\" indicates that the license is in the list of licenses that FSF publishes as libre.\n\nA value of \"false\" indicates that the license is explicitly not in the corresponding list of FSF libre licenses (e.g., FSF has the license on a non-free list).\n\nIf the isFsfLibre field is not specified, the SPDX data creator makes no\nassertions about whether the License is listed in the FSF's commentary.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/isFsfLibre",
        "name": "isFsfLibre",
        "profile": "ExpandedLicensing",
        "summary": "Specifies whether the License is listed as free by the\n[Free Software Foundation (FSF)](https://fsf.org)."
      },
      "isOsiApproved": {
        "datatype": "boolean",
        "description": "isOsiApproved specifies whether the [Open Source Initiative (OSI)](https://opensource.org)\nhas listed this License as \"approved\" in their list of OSI Approved Licenses,\nlocated at the time of this writing at https://opensource.org/licenses/.\n\nA value of \"true\" indicates that the license is in the list of licenses that OSI publishes as approved.\n\nA value of \"false\" indicates that the license is explicitly not in the corresponding list of OSI licenses (e.g., OSI has stated publicly that a license is not approved).\n\nIf the isOsiApproved field is not specified, the SPDX data creator makes no\nassertions about whether the License is approved by the OSI.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/isOsiApproved",
        "name": "isOsiApproved",
        "profile": "ExpandedLicensing",
        "summary": "Specifies whether the License is listed as approved by the\n[Open Source Initiative (OSI)](https://opensource.org)."
      },
      "licenseXml": {
        "datatype": "string",
        "description": "The license XML format is defined and used by the SPDX legal team.\nSee the XML fields defined at https://github.com/spdx/license-list-XML/blob/main/DOCS/xml-fields.md for a text description.\nThere is also an XML schema available at https://github.com/spdx/license-list-XML/blob/main/schema/ListedLicense.xsd.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/licenseXml",
        "name": "licenseXml",
        "profile": "ExpandedLicensing",
        "summary": "Identifies all the text and metadata associated with a license in the license XML format."
      },
      "listVersionAdded": {
        "datatype": "string",
        "description": "A listVersionAdded for a ListedLicense or ListedLicenseException on the SPDX\nLicense List specifies which version release of the License List was the first\none in which it was included.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/listVersionAdded",
        "name": "listVersionAdded",
        "profile": "ExpandedLicensing",
        "summary": "Specifies the SPDX License List version in which this ListedLicense or\nListedLicenseException identifier was first added."
      },
      "member": {
        "description": "A member is a license expression participating in a conjunctive (of type\nConjunctiveLicenseSet) or a disjunctive (of type DisjunctiveLicenseSet)\nlicense set.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/member",
        "name": "member",
        "profile": "ExpandedLicensing",
        "range": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/AnyLicenseInfo",
        "summary": "A license expression participating in a license set."
      },
      "obsoletedBy": {
        "datatype": "string",
        "description": "An obsoletedBy value for a deprecated License or LicenseAddition specifies\nthe licenseId of the replacement License or LicenseAddition that is preferred\nto be used in its place. It should use the same format as specified for a\nlicenseId.\n\nThe License's or LicenseAddition's comment value may include more information\nabout the reason why the licenseId specified in the obsoletedBy value is\npreferred.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/obsoletedBy",
        "name": "obsoletedBy",
        "profile": "ExpandedLicensing",
        "summary": "Specifies the licenseId that is preferred to be used in place of a deprecated\nLicense or LicenseAddition."
      },
      "seeAlso": {
        "datatype": "anyURI",
        "description": "A seeAlso defines a cross-reference with a URL where the License or\nLicenseAddition can be found in use by one or a few projects.\n\nIf applicable, it should include a URL where the license text is posted by\nthe license steward, particularly if the license steward has made available a\n\"canonical\" primary URL for the license text.\n\nIf the license is OSI approved, a seeAlso should be included with the URL for\nthe license's listing on the OSI website.\n\nThe seeAlso URL may refer to a previously-available URL for the License or\nLicenseAddition which is no longer active.\n\nWhere applicable, the seeAlso URL should include the license text in its\nnative language. seeAlso URLs to English or other translations may be included\nwhere multiple, equivalent official translations exist.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/seeAlso",
        "name": "seeAlso",
        "profile": "ExpandedLicensing",
        "summary": "Contains a URL where the License or LicenseAddition can be found in use."
      },
      "standardAdditionTemplate": {
        "datatype": "string",
        "description": "A standardAdditionTemplate contains a license addition template which describes\nsections of the LicenseAddition text which can be varied. See the Legacy Text\nTemplate format section of the SPDX specification for format information.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/standardAdditionTemplate",
        "name": "standardAdditionTemplate",
        "profile": "ExpandedLicensing",
        "summary": "Identifies the full text of a LicenseAddition, in SPDX templating format."
      },
      "standardLicenseHeader": {
        "datatype": "string",
        "description": "A standardLicenseHeader contains the plain text of the License author's\npreferred wording to be used, typically in a source code file's header\ncomments or similar location, to indicate that the file is subject to\nthe specified License.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/standardLicenseHeader",
        "name": "standardLicenseHeader",
        "profile": "ExpandedLicensing",
        "summary": "Provides a License author's preferred text to indicate that a file is covered\nby the License."
      },
      "standardLicenseTemplate": {
        "datatype": "string",
        "description": "A standardLicenseTemplate contains a license template which describes\nsections of the License text which can be varied. See the Legacy Text Template\nformat section of the SPDX specification for format information.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/standardLicenseTemplate",
        "name": "standardLicenseTemplate",
        "profile": "ExpandedLicensing",
        "summary": "Identifies the full text of a License, in SPDX templating format."
      },
      "subjectAddition": {
        "description": "A subjectAddition is a LicenseAddition which is subject to a 'with additional\ntext' effect (WithAdditionOperator).",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/subjectAddition",
        "name": "subjectAddition",
        "profile": "ExpandedLicensing",
        "range": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/LicenseAddition",
        "summary": "A LicenseAddition participating in a 'with addition' model."
      },
      "subjectExtendableLicense": {
        "description": "A subjectExtendableLicense is a License which is subject to a 'with additional text' effect (WithAdditionOperator).",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/subjectExtendableLicense",
        "name": "subjectExtendableLicense",
        "profile": "ExpandedLicensing",
        "range": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/ExtendableLicense",
        "summary": "A License participating in a 'with addition' model."
      },
      "subjectLicense": {
        "description": "A subjectLicense is a License which is subject an 'or later' effect\n(OrLaterOperator).",
        "iri": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/subjectLicense",
        "name": "subjectLicense",
        "profile": "ExpandedLicensing",
        "range": "https://spdx.org/rdf/3.0.0/terms/ExpandedLicensing/License",
        "summary": "A License participating in an 'or later' model."
      }
    },
    "summary": "Fully expanded license expressions."
  },
  "Extension": {
    "classes": {
      "CdxPropertiesExtension": {
        "abstract": false,
        "description": "This extension provides a more structured extension using a name-value approach.\nUnlike key-value stores, cdxProperties support duplicate names, each potentially having different values. \nThis is intended to be compatible with the CycloneDX property `properties`.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Extension/CdxPropertiesExtension",
        "name": "CdxPropertiesExtension",
        "profile": "Extension",
        "properties": {
          "cdxProperty": {
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Extension/cdxProperty"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Extension/Extension",
        "summary": "A type of extension consisting of a list of name value pairs."
      },
      "CdxPropertyEntry": {
        "abstract": false,
        "description": "Each CdxPropertyEntry  contains a name-value pair which maps the name to its associated value.\nUnlike key-value stores, cdxProperties support duplicate names, each potentially having different values. \nThis class can be used to implement CycloneDX compatible properties.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Extension/CdxPropertyEntry",
        "name": "CdxPropertyEntry",
        "profile": "Extension",
        "properties": {
          "cdxPropName": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Extension/cdxPropName"
          },
          "cdxPropValue": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Extension/cdxPropValue"
          }
        },
        "summary": "A property name with an associated value."
      },
      "Extension": {
        "abstract": true,
        "description": "An Extension is a characterization of some aspect of an Element that is associated with the Element in a generalized fashion.\n\nRather than being associated with a particular Element through the typical use of a purpose-specific object property an Extension is associated with the Element it characterizes using a single common generalized object property.\n\nThis approach serves multiple purposes:\n\n1. **Support profile-based extended characterization of Elements.** Enables specification and expression of Element characterization extensions within any profile and namespace of SPDX without requiring changes to other profiles or namespaces and without requiring local subclassing of remote classes (which could inhibit ecosystem interoperability in some cases).\n2. **Support extension of SPDX by adopting individuals or communities with Element characterization details uniquely specialized to their particular context.** Enables adopting individuals or communities to utilize SPDX expressive capabilities along with expressing more arcane Element characterization details specific to them and not appropriate for standardization across SPDX.\n3. **Support structured capture of expressive solutions for gaps in SPDX coverage from real-world use.** Enables adopting individuals or communities to express Element characterization details they require that are not currently defined in SPDX but likely should be. Enables a practical pipeline that\n * identifies gaps in SPDX that should be filled, \n * expresses solutions to those gaps in a way that allows the identifying adopters to use the extended solutions with SPDX and does not conflict with current SPDX,\n * can be clearly detected among the SPDX content exchange ecosystem,\n * provides a clear and structured definition of gap solution that can be used as submission for revision to SPDX standard",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Extension/Extension",
        "name": "Extension",
        "profile": "Extension",
        "properties": {},
        "summary": "A characterization of some aspect of an Element that is associated with the Element in a generalized fashion."
      }
    },
    "description": "The Extension namespace defines the abstract Extension class serving as the base for all defined extension subclasses.",
    "iri": "https://spdx.org/rdf/3.0.0/terms/Extension",
    "properties": {
      "cdxPropName": {
        "datatype": "string",
        "description": "A cdxPropName is used in a CdxExtension name-value pair.\nUnlike key-value stores, cdxProperties support duplicate names, each potentially having different values.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Extension/cdxPropName",
        "name": "cdxPropName",
        "profile": "Extension",
        "summary": "A name used in a CdxExtension name-value pair."
      },
      "cdxPropValue": {
        "datatype": "string",
        "description": "A cdxPropValue is used in a CdxExtension name-value pair.\nUnlike key-value stores, cdxProperties support duplicate names, each potentially having different values.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Extension/cdxPropValue",
        "name": "cdxPropValue",
        "profile": "Extension",
        "summary": "A value used in a CdxExtension name-value pair."
      },
      "cdxProperty": {
        "description": "This field provides a mapping of a name to a value.\nThis is intended to be compatible with the CycloneDX property \"properties\".\nUnlike key-value stores, properties support duplicate names, each potentially having different values.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Extension/cdxProperty",
        "name": "cdxProperty",
        "profile": "Extension",
        "range": "https://spdx.org/rdf/3.0.0/terms/Extension/CdxPropertyEntry",
        "summary": "Provides a map of a property names to a values."
      }
    },
    "summary": "Everything having to do with SPDX extensions."
  },
  "Security": {
    "classes": {
      "CvssV2VulnAssessmentRelationship": {
        "abstract": false,
        "description": "A CvssV2VulnAssessmentRelationship relationship describes the determined score and vector of a vulnerability using version 2.0 of the Common Vulnerability Scoring System (CVSS) as defined at [https://www.first.org/cvss/v2/guide](https://www.first.org/cvss/v2/guide). It is intended to communicate the results of using a CVSS calculator.\n\n**Constraints**\n\n- The relationship type must be set to `hasAssessmentFor`.\n\n**Syntax**\n\n```json\n{\n  \"@type\": \"CvssV2VulnAssessmentRelationship\",\n  \"@id\": \"urn:spdx.dev:cvssv2-cve-2020-28498\",\n  \"relationshipType\": \"hasAssessmentFor\",\n  \"score\": 4.3,\n  \"vectorString\": \"(AV:N/AC:M/Au:N/C:P/I:N/A:N)\",\n  \"from\": \"urn:spdx.dev:vuln-cve-2020-28498\",\n  \"to\": [\"urn:product-acme-application-1.3\"],\n  \"assessedElement\": \"urn:npm-elliptic-6.5.2\",\n  \"externalRefs\": [\n    {\n      \"@type\": \"ExternalRef\",\n      \"externalRefType\": \"securityAdvisory\",\n      \"locator\": \"https://nvd.nist.gov/vuln/detail/CVE-2020-28498\"\n    },\n    {\n      \"@type\": \"ExternalRef\",\n      \"externalRefType\": \"securityAdvisory\",\n      \"locator\": \"https://snyk.io/vuln/SNYK-JS-ELLIPTIC-1064899\"\n    },\n    {\n      \"@type\": \"ExternalRef\",\n      \"externalRefType\": \"securityFix\",\n      \"locator\": \"https://github.com/indutny/elliptic/commit/441b742\"\n    }\n  ],\n  \"suppliedBy\": [\"urn:spdx.dev:agent-my-security-vendor\"],\n  \"publishedTime\": \"2023-05-06T10:06:13Z\"\n},\n{\n  \"@type\": \"Relationship\",\n  \"@id\": \"urn:spdx.dev:vulnAgentRel-1\",  \n  \"relationshipType\": \"publishedBy\",  \n  \"from\": \"urn:spdx.dev:cvssv2-cve-2020-28498\",\n  \"to\": [\"urn:spdx.dev:agent-snyk\"],\n  \"startTime\": \"2021-03-08T16:06:50Z\"\n}\n```",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/CvssV2VulnAssessmentRelationship",
        "name": "CvssV2VulnAssessmentRelationship",
        "profile": "Security",
        "properties": {
          "score": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/score"
          },
          "vectorString": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/vectorString"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Security/VulnAssessmentRelationship",
        "summary": "Provides a CVSS version 2.0 assessment for a vulnerability."
      },
      "CvssV3VulnAssessmentRelationship": {
        "abstract": false,
        "description": "A CvssV3VulnAssessmentRelationship relationship describes the determined score,\nseverity, and vector of a vulnerability using version [3.0](https://www.first.org/cvss/v3.0/specification-document) or [3.1](https://www.first.org/cvss/v3.1/specification-document) of the Common\nVulnerability Scoring System (CVSS). It is intended to communicate the results of using a CVSS calculator.\n\n**Constraints**\n\n- The value of severity must be one of 'NONE', 'LOW', 'MEDIUM', 'HIGH' or 'CRITICAL'.\n- The relationship type must be set to `hasAssessmentFor`.\n\n**Syntax**\n\n```json\n{\n  \"@type\": \"CvssV3VulnAssessmentRelationship\",\n  \"@id\": \"urn:spdx.dev:cvssv3-cve-2020-28498\",\n  \"relationshipType\": \"hasAssessmentFor\",\n  \"score\": 6.8,\n  \"severity\": \"MEDIUM\",\n  \"vectorString\": \"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N\",\n  \"from\": \"urn:spdx.dev:vuln-cve-2020-28498\",\n  \"to\": [\"urn:product-acme-application-1.3\"],\n  \"assessedElement\": \"urn:npm-elliptic-6.5.2\",\n  \"externalRefs\": [\n    {\n      \"@type\": \"ExternalRef\",\n      \"externalRefType\": \"securityAdvisory\",\n      \"locator\": \"https://nvd.nist.gov/vuln/detail/CVE-2020-28498\"\n    },\n    {\n      \"@type\": \"ExternalRef\",\n      \"externalRefType\": \"securityAdvisory\",\n      \"locator\": \"https://snyk.io/vuln/SNYK-JS-ELLIPTIC-1064899\"\n    },\n    {\n      \"@type\": \"ExternalRef\",\n      \"externalRefType\": \"securityFix\",\n      \"locator\": \"https://github.com/indutny/elliptic/commit/441b742\"\n    }\n  ],\n  \"suppliedBy\": [\"urn:spdx.dev:agent-my-security-vendor\"],\n  \"publishedTime\": \"2023-05-06T10:06:13Z\"\n},\n{\n  \"@type\": \"Relationship\",\n  \"@id\": \"urn:spdx.dev:vulnAgentRel-1\",\n  \"relationshipType\": \"publishedBy\",\n  \"from\": \"urn:spdx.dev:cvssv3-cve-2020-28498\",\n  \"to\": \"urn:spdx.dev:agent-snyk\",\n  \"startTime\": \"2021-03-08T16:06:50Z\"\n}\n```",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/CvssV3VulnAssessmentRelationship",
        "name": "CvssV3VulnAssessmentRelationship",
        "profile": "Security",
        "properties": {
          "score": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/score"
          },
          "severity": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/severity"
          },
          "vectorString": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/vectorString"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Security/VulnAssessmentRelationship",
        "summary": "Provides a CVSS version 3 assessment for a vulnerability."
      },
      "CvssV4VulnAssessmentRelationship": {
        "abstract": false,
        "description": "A CvssV4VulnAssessmentRelationship relationship describes the determined score, severity, and vector of a vulnerability using version 4 of the Common Vulnerability Scoring System (CVSS) as defined on [https://www.first.org/cvss/v4.0/specification-document](https://www.first.org/cvss/v4.0/specification-document). It is intented to communicate the results of using a CVSS calculator.\n\n**Constraints**\n\n- The value of severity must be one of 'NONE', 'LOW', 'MEDIUM', 'HIGH' or 'CRITICAL'.\n- The relationship type must be set to hasAssessmentFor.\n\n**Syntax**\n\n```json\n{\n  \"@type\": \"CvssV4VulnAssessmentRelationship\",\n  \"@id\": \"urn:spdx.dev:cvssv4-cve-2021-44228\",\n  \"relationshipType\": \"hasAssessmentFor\",\n  \"severity\": \"MEDIUM\",\n  \"score\": 10.0,\n  \"vectorString\": \"CVSS:4.0/AV:N/AC:L/AT:N/AR:N/UI:N/VCH/VI:H/VA:H/SC:H/SI:H/SA:H/E:A\",\n  \"from\": \"urn:spdx.dev:vuln-cve-2021-44228\",\n  \"to\": [\"urn:product-acme-application-1.3\"],\n  \"assessedElement\": \"urn:apache-log4j-2.14.1\",\n  \"externalRefs\": [\n    {\n      \"@type\": \"ExternalRef\",\n      \"externalRefType\": \"securityAdvisory\",\n      \"locator\": \"https://nvd.nist.gov/vuln/detail/CVE-2021-44228\"\n    },\n    {\n      \"@type\": \"ExternalRef\",\n      \"externalRefType\": \"securityAdvisory\",\n      \"locator\": \"https://logging.apache.org/log4j/2.x/security.html\"\n    },\n    {\n      \"@type\": \"ExternalRef\",\n      \"externalRefType\": \"securityOther\",\n      \"locator\": \"    https://www.first.org/cvss/v4.0/examples#Apache-log4j-JNDI-Command-Execution-log4shell-Vulnerability-CVE-2021-44228\"\n    },\n  ],\n  \"suppliedBy\": [\"urn:spdx.dev:agent-my-security-vendor\"],\n  \"publishedTime\": \"2023-10-05T23:09:13Z\"\n},\n{\n  \"@type\": \"Relationship\",\n  \"@id\": \"urn:spdx.dev:vulnAgentRel-1\",\n  \"relationshipType\": \"publishedBy\",\n  \"from\": \"urn:spdx.dev:cvssv4-cve-2021-44228\",\n  \"to\": \"urn:spdx.dev:agent-apache.org\",\n  \"startTime\": \"2021-12-11T18:39:00Z\"\n}\n```",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/CvssV4VulnAssessmentRelationship",
        "name": "CvssV4VulnAssessmentRelationship",
        "profile": "Security",
        "properties": {
          "score": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/score"
          },
          "severity": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/severity"
          },
          "vectorString": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/vectorString"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Security/VulnAssessmentRelationship",
        "summary": "Provides a CVSS version 4 assessment for a vulnerability."
      },
      "EpssVulnAssessmentRelationship": {
        "abstract": false,
        "description": "An EpssVulnAssessmentRelationship relationship describes the likelihood or probability that a vulnerability will be exploited in the wild, and the percentile ranking of probability relative to all other vulnerabilities' EPSS scores, using the Exploit Prediction Scoring System (EPSS) as defined at [https://www.first.org/epss/model](https://www.first.org/epss/model).\n\n**Constraints**\n\n- The relationship type must be set to hasAssessmentFor.\n- The probability must be between 0 and 1.\n- The percentile must be between 0 and 1.\n\n**Syntax**\n\n```json\n{\n  \"@type\": \"EpssVulnAssessmentRelationship\",\n  \"@id\": \"urn:spdx.dev:epss-CVE-2020-28498\",\n  \"relationshipType\": \"hasAssessmentFor\",\n  \"probability\": 0.00105,\n  \"percentile\": 0.42356,\n  \"from\": \"urn:spdx.dev:vuln-cve-2020-28498\",\n  \"to\": [\"urn:product-acme-application-1.3\"],\n  \"suppliedBy\": [\"urn:spdx.dev:agent-jane-doe\"],\n  \"publishedTime\": \"2023-10-05T00:00:30Z\"\n}\n```",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/EpssVulnAssessmentRelationship",
        "name": "EpssVulnAssessmentRelationship",
        "profile": "Security",
        "properties": {
          "percentile": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/percentile"
          },
          "probability": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/probability"
          },
          "publishedTime": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/publishedTime"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Security/VulnAssessmentRelationship",
        "summary": "Provides an EPSS assessment for a vulnerability."
      },
      "ExploitCatalogVulnAssessmentRelationship": {
        "abstract": false,
        "description": "An ExploitCatalogVulnAssessmentRelationship describes if a vulnerability is\nlisted in any exploit catalog such as the CISA Known Exploited Vulnerabilities\nCatalog (KEV) \n[https://www.cisa.gov/known-exploited-vulnerabilities-catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n**Constraints**\n\n- The relationship type must be set to hasAssessmentFor.\n\n**Syntax**\n\n```json\n{\n  \"@type\": \"ExploitCatalogVulnAssessmentRelationship\",\n  \"@id\": \"urn:spdx.dev:exploit-catalog-1\",\n  \"relationshipType\": \"hasAssessmentFor\",\n  \"catalogType\": \"kev\",\n  \"locator\": \"https://www.cisa.gov/known-exploited-vulnerabilities-catalog\",\n  \"exploited\": \"true\",\n  \"from\": \"urn:spdx.dev:vuln-cve-2023-2136\",\n  \"to\": [\"urn:product-google-chrome-112.0.5615.136\"],\n  \"suppliedBy\": [\"urn:spdx.dev:agent-jane-doe\"],\n  \"publishedTime\": \"2021-03-09T11:04:53Z\"\n}\n```",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/ExploitCatalogVulnAssessmentRelationship",
        "name": "ExploitCatalogVulnAssessmentRelationship",
        "profile": "Security",
        "properties": {
          "catalogType": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/catalogType"
          },
          "exploited": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/exploited"
          },
          "locator": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/locator"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Security/VulnAssessmentRelationship",
        "summary": "Provides an exploit assessment of a vulnerability."
      },
      "SsvcVulnAssessmentRelationship": {
        "abstract": false,
        "description": "An SsvcVulnAssessmentRelationship describes the decision made using the\nStakeholder-Specific Vulnerability Categorization (SSVC) decision tree as\ndefined on [https://www.cisa.gov/stakeholder-specific-vulnerability-categorization-ssvc](https://www.cisa.gov/stakeholder-specific-vulnerability-categorization-ssvc).\nIt is intended to communicate the results of using the CISA SSVC Calculator.\n\n**Constraints**\n\n- The relationship type must be set to hasAssessmentFor.\n\n**Syntax**\n\n```json\n{\n  \"@type\": \"SsvcVulnAssessmentRelationship\",\n  \"@id\": \"urn:spdx.dev:ssvc-1\",\n  \"relationshipType\": \"hasAssessmentFor\",\n  \"decisionType\": \"act\",\n  \"from\": \"urn:spdx.dev:vuln-cve-2020-28498\",\n  \"to\": [\"urn:product-acme-application-1.3\"],\n  \"assessedElement\": \"urn:npm-elliptic-6.5.2\",\n  \"suppliedBy\": [\"urn:spdx.dev:agent-jane-doe\"],\n  \"publishedTime\": \"2021-03-09T11:04:53Z\"\n}\n```",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/SsvcVulnAssessmentRelationship",
        "name": "SsvcVulnAssessmentRelationship",
        "profile": "Security",
        "properties": {
          "decisionType": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/decisionType"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Security/VulnAssessmentRelationship",
        "summary": "Provides an SSVC assessment for a vulnerability."
      },
      "VexAffectedVulnAssessmentRelationship": {
        "abstract": false,
        "description": "VexAffectedVulnAssessmentRelationship connects a vulnerability and a number\nof elements. The relationship marks these elements as products affected by the\nvulnerability. This relationship corresponds to the VEX affected status.\n\n**Constraints**\n\nWhen linking elements using a VexAffectedVulnAssessmentRelationship, the\nfollowing requirements must be observed:\n\n- Elements linked with a VulnVexAffectedAssessmentRelationship are constrained\nto the affects relationship type.\n\n**Syntax**\n\n```json\n{\n  \"@type\": \"VexAffectedVulnAssessmentRelationship\",\n  \"@id\": \"urn:spdx.dev:vex-affected-1\",\n  \"relationshipType\": \"affects\",\n  \"from\": \"urn:spdx.dev:vuln-cve-2020-28498\",\n  \"to\": [\"urn:product-acme-application-1.3\"],\n  \"assessedElement\": \"urn:npm-elliptic-6.5.2\",\n  \"actionStatement\": \"Upgrade to version 1.4 of ACME application.\",\n  \"suppliedBy\": [\"urn:spdx.dev:agent-jane-doe\"],\n  \"publishedTime\": \"2021-03-09T11:04:53Z\"\n}\n```",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/VexAffectedVulnAssessmentRelationship",
        "name": "VexAffectedVulnAssessmentRelationship",
        "profile": "Security",
        "properties": {
          "actionStatement": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/actionStatement"
          },
          "actionStatementTime": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/actionStatementTime"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Security/VexVulnAssessmentRelationship",
        "summary": "Connects a vulnerability and an element designating the element as a product\naffected by the vulnerability."
      },
      "VexFixedVulnAssessmentRelationship": {
        "abstract": false,
        "description": "VexFixedVulnAssessmentRelationship links a vulnerability to a number of elements\nrepresenting VEX products where a vulnerability has been fixed and are no longer\naffected. It represents the VEX fixed status.\n\n**Constraints**\n\nWhen linking elements using a VexFixedVulnAssessmentRelationship, the following\nrequirements must be observed:\n\n- Elements linked with a VulnVexFixedAssessmentRelationship are constrained to\nusing the fixedIn relationship type.\n- The from: end of the relationship must ve a /Security/Vulnerability classed\nelement.\n\n**Syntax**\n\n```json\n{\n  \"@type\": \"VexFixedVulnAssessmentRelationship\",\n  \"@id\": \"urn:spdx.dev:vex-fixed-in-1\",\n  \"relationshipType\": \"fixedIn\",\n  \"from\": \"urn:spdx.dev:vuln-cve-2020-28498\",\n  \"to\": [\"urn:product-acme-application-1.3\"],\n  \"assessedElement\": \"urn:npm-elliptic-6.5.4\",\n  \"suppliedBy\": [\"urn:spdx.dev:agent-jane-doe\"],\n  \"publishedTime\": \"2021-03-09T11:04:53Z\"\n}\n```",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/VexFixedVulnAssessmentRelationship",
        "name": "VexFixedVulnAssessmentRelationship",
        "profile": "Security",
        "properties": {},
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Security/VexVulnAssessmentRelationship",
        "summary": "Links a vulnerability and elements representing products (in the VEX sense) where\na fix has been applied and are no longer affected."
      },
      "VexNotAffectedVulnAssessmentRelationship": {
        "abstract": false,
        "description": "VexNotAffectedVulnAssessmentRelationship connects a vulnerability and a number\nof elements designating them as products not affected by the vulnerability.\nThis relationship corresponds to the VEX not_affected status.\n\n**Constraints**\n\nWhen linking elements using a VexNotVulnAffectedAssessmentRelationship, the\nfollowing requirements must be observed:\n\n* Relating elements with a VexNotAffectedVulnAssessmentRelationship is restricted\nto the doesNotAffect relationship type.\n* The from: end of the relationship must be a /Security/Vulnerability classed\nelement.\n* Both impactStatement and justificationType properties have a cardinality of\n0..1 making them optional. Nevertheless, to produce a valid VEX not_affected\nstatement, one of them MUST be defined. This is specified in the Minimum Elements\nfor VEX.\n\n**Syntax**\n\n```json\n{\n  \"@type\": \"VexNotAffectedVulnAssessmentRelationship\",\n  \"@id\": \"urn:spdx.dev:vex-not-affected-1\",\n  \"relationshipType\": \"doesNotAffect\",\n  \"from\": \"urn:spdx.dev:vuln-cve-2020-28498\",\n  \"to\": [\"urn:product-acme-application-1.3\"],\n  \"assessedElement\": \"urn:npm-elliptic-6.5.2\",\n  \"justificationType\": \"componentNotPresent\",\n  \"impactStatement\": \"Not using this vulnerable part of this library.\",\n  \"suppliedBy\": [\"urn:spdx.dev:agent-jane-doe\"],\n  \"publishedTime\": \"2021-03-09T11:04:53Z\"\n}\n```",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/VexNotAffectedVulnAssessmentRelationship",
        "name": "VexNotAffectedVulnAssessmentRelationship",
        "profile": "Security",
        "properties": {
          "impactStatement": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/impactStatement"
          },
          "impactStatementTime": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/impactStatementTime"
          },
          "justificationType": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/justificationType"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Security/VexVulnAssessmentRelationship",
        "summary": "Links a vulnerability and one or more elements designating the latter as products\nnot affected by the vulnerability."
      },
      "VexUnderInvestigationVulnAssessmentRelationship": {
        "abstract": false,
        "description": "VexUnderInvestigationVulnAssessmentRelationship links a vulnerability to a\nnumber of products stating the vulnerability's impact on them is being\ninvestigated. It represents the VEX under_investigation status.\n\n**Constraints**\n\nWhen linking elements using a VexUnderInvestigationVulnAssessmentRelationship\nthe following requirements must be observed:\n\n- Elements linked with a VexUnderInvestigationVulnAssessmentRelationship are\nconstrained to using the underInvestigationFor relationship type.\n- The from: end of the relationship must ve a /Security/Vulnerability classed\nelement.\n\n**Syntax**\n\n```json\n{\n  \"@type\": \"VexUnderInvestigationVulnAssessmentRelationship\",\n  \"@id\": \"urn:spdx.dev:vex-underInvestigation-1\",\n  \"relationshipType\": \"underInvestigationFor\",\n  \"from\": \"urn:spdx.dev:vuln-cve-2020-28498\",\n  \"to\": [\"urn:product-acme-application-1.3\"],\n  \"assessedElement\": \"urn:npm-elliptic-6.5.2\",\n  \"suppliedBy\": [\"urn:spdx.dev:agent-jane-doe\"],\n  \"publishedTime\": \"2021-03-09T11:04:53Z\"\n}\n```",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/VexUnderInvestigationVulnAssessmentRelationship",
        "name": "VexUnderInvestigationVulnAssessmentRelationship",
        "profile": "Security",
        "properties": {},
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Security/VexVulnAssessmentRelationship",
        "summary": "Designates elements as products where the impact of a vulnerability is being\ninvestigated."
      },
      "VexVulnAssessmentRelationship": {
        "abstract": true,
        "description": "VexVulnAssessmentRelationship is an abstract subclass that defined the common\nproperties shared by all the SPDX-VEX status relationships. \n\n**Constraints**\n\nWhen linking elements using a VexVulnAssessmentRelationship, the following\nrequirements must be observed:\n\n- The from: end must be a /Security/Vulnerability classed element\n- The to: end must point to elements representing the VEX _products_. To\nspecify a different element where the vulnerability was detected, the VEX\nrelationship can optionally specify _subcomponents_ using the assessedElement\nproperty.\n\nVEX inherits information from the document level down to its statements. When a\nstatement is missing information it can be completed by reading the equivalent \nfield from the containing document. For example, if a VEX relationship is\nmissing data in its createdBy property, tools must consider the entity\nlisted in the CreationInfo section of the document as the VEX author.\nIn the same way, when a VEX relationship does not have a created property,\nthe document's date must be considered as authoritative.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/VexVulnAssessmentRelationship",
        "name": "VexVulnAssessmentRelationship",
        "profile": "Security",
        "properties": {
          "statusNotes": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/statusNotes"
          },
          "vexVersion": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/vexVersion"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Security/VulnAssessmentRelationship",
        "summary": "Asbtract ancestor class for all VEX relationships"
      },
      "VulnAssessmentRelationship": {
        "abstract": true,
        "description": "VulnAssessmentRelationship is the ancestor class common to all vulnerability\nassessment relationships. It factors out the common properties shared by them.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/VulnAssessmentRelationship",
        "name": "VulnAssessmentRelationship",
        "profile": "Security",
        "properties": {
          "assessedElement": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/assessedElement"
          },
          "modifiedTime": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/modifiedTime"
          },
          "publishedTime": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/publishedTime"
          },
          "suppliedBy": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Core/suppliedBy"
          },
          "withdrawnTime": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/withdrawnTime"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/Relationship",
        "summary": "Abstract ancestor class for all vulnerability assessments"
      },
      "Vulnerability": {
        "abstract": false,
        "description": "Specifies a vulnerability and its associated information.\n\n**Syntax**\n\n```json\n{\n  \"@type\": \"Vulnerability\",\n  \"@id\": \"urn:spdx.dev:vuln-1\",\n  \"summary\": \"Use of a Broken or Risky Cryptographic Algorithm\",\n  \"description\": \"The npm package `elliptic` before version 6.5.4 are vulnerable to Cryptographic Issues via the secp256k1 implementation in elliptic/ec/key.js. There is no check to confirm that the public key point passed into the derive function actually exists on the secp256k1 curve. This results in the potential for the private key used in this implementation to be revealed after a number of ECDH operations are performed.\",      \n  \"modifiedTime\": \"2021-03-08T16:06:43Z\",\n  \"publishedTime\": \"2021-03-08T16:02:50Z\",\n  \"externalIdentifiers\": [\n    {\n      \"@type\": \"ExternalIdentifier\",\n      \"externalIdentifierType\": \"cve\",\n      \"identifier\": \"CVE-2020-2849\",\n      \"identifierLocator\": [\n        \"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-28498\",\n        \"https://www.cve.org/CVERecord?id=CVE-2020-28498\"\n      ],\n      \"issuingAuthority\": \"urn:spdx.dev:agent-cve.org\"\n    },\n    {\n      \"type\": \"ExternalIdentifier\",\n      \"externalIdentifierType\": \"securityAdvisory\",\n      \"identifier\": \"GHSA-r9p9-mrjm-926w\",\n      \"identifierLocator\": \"https://github.com/advisories/GHSA-r9p9-mrjm-926w\"\n    },\n    {\n      \"type\": \"ExternalIdentifier\",\n      \"externalIdentifierType\": \"securityOther\",\n      \"identifier\": \"SNYK-JS-ELLIPTIC-1064899\",\n      \"identifierLocator\": \"https://security.snyk.io/vuln/SNYK-JS-ELLIPTIC-1064899\"\n    }\n  ],\n  \"externalRefs\": [\n    {\n        \"@type\": \"ExternalRef\",\n        \"externalRefType\": \"securityAdvisory\",\n        \"locator\": \"https://nvd.nist.gov/vuln/detail/CVE-2020-28498\"\n    },\n    {\n      \"@type\": \"ExternalRef\",\n      \"externalRefType\": \"securityAdvisory\",\n      \"locator\": \"https://ubuntu.com/security/CVE-2020-28498\"\n    },\n    {\n      \"@type\": \"ExternalRef\",\n      \"externalRefType\": \"securityOther\",\n      \"locator\": \"https://github.com/indutny/elliptic/pull/244/commits\"\n    },\n    {\n      \"@type\": \"ExternalRef\",\n      \"externalRefType\": \"securityOther\",\n      \"locator\": \"https://github.com/christianlundkvist/blog/blob/master/2020_05_26_secp256k1_twist_attacks/secp256k1_twist_attacks.md\"\n    }\n  ]\n},\n{\n  \"@type\": \"Relationship\",\n  \"@id\": \"urn:spdx.dev:vulnRelationship-1\",\n  \"relationshipType\": \"hasAssociatedVulnerability\",\n  \"from\": \"urn:npm-elliptic-6.5.2\",\n  \"to\": [\"urn:spdx.dev:vuln-1\"],\n  \"startTime\": \"2021-03-08T16:06:50Z\"\n},\n{\n  \"@type\": \"Relationship\",\n  \"@id\": \"urn:spdx.dev:vulnAgentRel-1\",  \n  \"relationshipType\": \"publishedBy\",  \n  \"from\": \"urn:spdx.dev:vuln-1\",\n  \"to\": [\"urn:spdx.dev:agent-snyk\"],\n  \"startTime\": \"2021-03-08T16:06:50Z\"\n}\n```",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/Vulnerability",
        "name": "Vulnerability",
        "profile": "Security",
        "properties": {
          "modifiedTime": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/modifiedTime"
          },
          "publishedTime": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/publishedTime"
          },
          "withdrawnTime": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Security/withdrawnTime"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/Artifact",
        "summary": "Specifies a vulnerability and its associated information."
      }
    },
    "description": "The Security Profile captures security related information.",
    "iri": "https://spdx.org/rdf/3.0.0/terms/Security",
    "properties": {
      "actionStatement": {
        "datatype": "string",
        "description": "When an element is referenced with a VexAffectedVulnAssessmentRelationship,\nthe relationship MUST include one actionStatement that SHOULD describe actions\nto remediate or mitigate the vulnerability.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/actionStatement",
        "name": "actionStatement",
        "profile": "Security",
        "summary": "Provides advise on how to mitigate or remediate a vulnerability when a VEX product\nis affected by it."
      },
      "actionStatementTime": {
        "datatype": "dateTimeStamp",
        "description": "When a VEX statement communicates an affected status, the author MUST\ninclude an action statement with a recommended action to help mitigate the\nvulnerability's impact. The actionStatementTime property records the time\nwhen the action statement was first communicated.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/actionStatementTime",
        "name": "actionStatementTime",
        "profile": "Security",
        "summary": "Records the time when a recommended action was communicated in a VEX statement \nto mitigate a vulnerability."
      },
      "assessedElement": {
        "description": "Specifies subpackages, files or snippets referenced by a security assessment\nto specify the precise location where a vulnerability was found.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/assessedElement",
        "name": "assessedElement",
        "profile": "Security",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/Element",
        "summary": "Specifies an element contained in a piece of software where a vulnerability was\nfound."
      },
      "catalogType": {
        "description": "A catalogType is a mandatory value and must select one of the existing entries in the `ExploitCatalogType.md` vocabulary.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/catalogType",
        "name": "catalogType",
        "profile": "Security",
        "range": "https://spdx.org/rdf/3.0.0/terms/Security/ExploitCatalogType",
        "summary": "Specifies the exploit catalog type."
      },
      "decisionType": {
        "description": "A decisionType is a mandatory value and must select one of the four entries in the `SsvcDecisionType.md` vocabulary.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/decisionType",
        "name": "decisionType",
        "profile": "Security",
        "range": "https://spdx.org/rdf/3.0.0/terms/Security/SsvcDecisionType",
        "summary": "Provide the enumeration of possible decisions in the Stakeholder-Specific Vulnerability Categorization (SSVC) decision tree [https://www.cisa.gov/sites/default/files/publications/cisa-ssvc-guide%20508c.pdf](https://www.cisa.gov/sites/default/files/publications/cisa-ssvc-guide%20508c.pdf)"
      },
      "exploited": {
        "datatype": "boolean",
        "description": "This field is set when a CVE is listed in an exploit catalog.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/exploited",
        "name": "exploited",
        "profile": "Security",
        "summary": "Describe that a CVE is known to have an exploit because it's been listed in an exploit catalog."
      },
      "impactStatement": {
        "datatype": "string",
        "description": "When a VEX product element is related with a VexNotAffectedVulnAssessmentRelationship\nand a machine readable justification label is not provided, then an impactStatement\nthat further explains how or why the prouct(s) are not affected by the vulnerability\nmust be provided.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/impactStatement",
        "name": "impactStatement",
        "profile": "Security",
        "summary": "Explains why a VEX product is not affected by a vulnerability. It is an\nalternative in VexNotAffectedVulnAssessmentRelationship to the machine-readable\njustification label."
      },
      "impactStatementTime": {
        "datatype": "dateTimeStamp",
        "description": "Specifies the time when the impact statement was recorded.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/impactStatementTime",
        "name": "impactStatementTime",
        "profile": "Security",
        "summary": "Timestamp of impact statement."
      },
      "justificationType": {
        "description": "When stating that an element is not affected by a vulnerability, the\nVexNotAffectedVulnAssessmentRelationship must include a justification from the\nmachine-readable labels catalog informing the reason the element is not impacted.\n\nimpactStatement which is a string with English prose can be used instead or as\ncomplementary to the justification label, but one of both MUST be defined.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/justificationType",
        "name": "justificationType",
        "profile": "Security",
        "range": "https://spdx.org/rdf/3.0.0/terms/Security/VexJustificationType",
        "summary": "Impact justification label to be used when linking a vulnerability to an element\nrepresenting a VEX product with a VexNotAffectedVulnAssessmentRelationship\nrelationship."
      },
      "locator": {
        "datatype": "anyURI",
        "description": "A locator provides the location of an exploit catalog.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/locator",
        "name": "locator",
        "profile": "Security",
        "summary": "Provides the location of an exploit catalog."
      },
      "modifiedTime": {
        "datatype": "dateTimeStamp",
        "description": "Specifies a time when a vulnerability assessment was last modified.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/modifiedTime",
        "name": "modifiedTime",
        "profile": "Security",
        "summary": "Specifies a time when a vulnerability assessment was modified"
      },
      "percentile": {
        "datatype": "decimal",
        "description": "The percentile between 0 and 1 (0 and 100%) of the current probability score, the proportion of all scored vulnerabilities with the same or a lower EPSS score. [https://www.first.org/epss/data_stats](https://www.first.org/epss/data_stats)",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/percentile",
        "name": "percentile",
        "profile": "Security",
        "summary": "The percentile of the current probability score."
      },
      "probability": {
        "datatype": "decimal",
        "description": "The probability score between 0 and 1 (0 and 100%) estimating the likelihood of exploitation in the wild in the next 30 days (following score publication). [https://www.first.org/epss/data_stats](https://www.first.org/epss/data_stats)",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/probability",
        "name": "probability",
        "profile": "Security",
        "summary": "A probability score between 0 and 1 of a vulnerability being exploited."
      },
      "publishedTime": {
        "datatype": "dateTimeStamp",
        "description": "Specifies the time when a vulnerability was first published.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/publishedTime",
        "name": "publishedTime",
        "profile": "Security",
        "summary": "Specifies the time when a vulnerability was published."
      },
      "score": {
        "datatype": "decimal",
        "description": "The score provides information on the severity of a vulnerability per the\nCommon Vulnerability Scoring System as defined on [https://www.first.org/cvss](https://www.first.org/cvss/).",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/score",
        "name": "score",
        "profile": "Security",
        "summary": "Provides a numerical (0-10) representation of the severity of a vulnerability."
      },
      "severity": {
        "description": "The severity field provides a human readable string of the resulting numerical CVSS score.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/severity",
        "name": "severity",
        "profile": "Security",
        "range": "https://spdx.org/rdf/3.0.0/terms/Security/CvssSeverityType",
        "summary": "Specifies the CVSS qualitative severity rating of a vulnerability in relation to a piece of software."
      },
      "statusNotes": {
        "datatype": "string",
        "description": "A VEX statement may convey information about how status was determined and may reference other VEX information.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/statusNotes",
        "name": "statusNotes",
        "profile": "Security",
        "summary": "Conveys information about how VEX status was determined."
      },
      "vectorString": {
        "datatype": "string",
        "description": "Specifies any combination of the CVSS Base, Temporal, Threat, Environmental, and/or Supplemental vector string values for a vulnerability. Supports vectorStrings specified in all CVSS versions.\n\n**Constraints**\n\nString values for the vectorString range must only include the abbreviated form of metric names specified in CVSS specifications, e.g. [https://www.first.org/cvss/v4.0/specification-document#Vector-String](https://www.first.org/cvss/v4.0/specification-document#Vector-String)",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/vectorString",
        "name": "vectorString",
        "profile": "Security",
        "summary": "Specifies the CVSS vector string for a vulnerability."
      },
      "vexVersion": {
        "datatype": "string",
        "description": "The statement version default value is zero. When any VEX-related content changes, the version must be incremented.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/vexVersion",
        "name": "vexVersion",
        "profile": "Security",
        "summary": "Specifies the version of a VEX statement."
      },
      "withdrawnTime": {
        "datatype": "dateTimeStamp",
        "description": "Specified the time and date when a vulnerability was withdrawn.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/withdrawnTime",
        "name": "withdrawnTime",
        "profile": "Security",
        "summary": "Specified the time and date when a vulnerability was withdrawn."
      }
    },
    "summary": "The Security Profile captures security related information.",
    "vocabularies": {
      "CvssSeverityType": {
        "description": "CvssSeverityType specifies the CVSS severity type, defined in the CVSS specifications as the textual representation of the numeric CVSS score. The severity type entries are inclusive of and applicable to enumerations found in CVSS versions [3](https://www.first.org/cvss/v3.0/specification-document#Qualitative-Severity-Rating-Scale) and [4](https://www.first.org/cvss/v4.0/specification-document#Qualitative-Severity-Rating-Scale). CvssSeverityType is a mandatory field because baseSeverity is required in the CVSS version [3.0](https://www.first.org/cvss/cvss-v3.0.json), [3.1](https://www.first.org/cvss/cvss-v3.1.json), and [4.0](https://www.first.org/cvss/cvss-v4.0.json) schemas. The field can be used to document the base, temporal, threat, or environmental severity.",
        "entries": {
          "critical": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Security/CvssSeverityType/critical",
            "name": "critical",
            "summary": "When a CVSS score is between 9.0 - 10.0"
          },
          "high": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Security/CvssSeverityType/high",
            "name": "high",
            "summary": "When a CVSS score is between 7.0 - 8.9"
          },
          "low": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Security/CvssSeverityType/low",
            "name": "low",
            "summary": "When a CVSS score is between 0 - 3.9"
          },
          "medium": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Security/CvssSeverityType/medium",
            "name": "medium",
            "summary": "When a CVSS score is between 4 - 6.9"
          },
          "none": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Security/CvssSeverityType/none",
            "name": "none",
            "summary": "When a CVSS score is 0"
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/CvssSeverityType",
        "name": "CvssSeverityType",
        "profile": "Security",
        "summary": "Specifies the CVSS base, temporal, threat, or environmental severity type."
      },
      "ExploitCatalogType": {
        "description": "ExploitCatalogType specifies the type of exploit catalog that a vulnerability is listed in.",
        "entries": {
          "kev": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Security/ExploitCatalogType/kev",
            "name": "kev",
            "summary": "CISA's Known Exploited Vulnerability (KEV) Catalog"
          },
          "other": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Security/ExploitCatalogType/other",
            "name": "other",
            "summary": "Other exploit catalogs"
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/ExploitCatalogType",
        "name": "ExploitCatalogType",
        "profile": "Security",
        "summary": "Specifies the exploit catalog type."
      },
      "SsvcDecisionType": {
        "description": "SsvcDecisionType specifies the type of decision that's been made according to the Stakeholder-Specific Vulnerability Categorization (SSVC)  system [https://www.cisa.gov/stakeholder-specific-vulnerability-categorization-ssvc](https://www.cisa.gov/stakeholder-specific-vulnerability-categorization-ssvc)",
        "entries": {
          "act": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Security/SsvcDecisionType/act",
            "name": "act",
            "summary": "The vulnerability requires attention from the organization's internal, supervisory-level and leadership-level individuals. Necessary actions include requesting assistance or information about the vulnerability, as well as publishing a notification either internally and/or externally. Typically, internal groups would meet to determine the overall response and then execute agreed upon actions. CISA recommends remediating Act vulnerabilities as soon as possible."
          },
          "attend": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Security/SsvcDecisionType/attend",
            "name": "attend",
            "summary": "The vulnerability requires attention from the organization's internal, supervisory-level individuals. Necessary actions include requesting assistance or information about the vulnerability, and may involve publishing a notification either internally and/or externally. CISA recommends remediating Attend vulnerabilities sooner than standard update timelines."
          },
          "track": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Security/SsvcDecisionType/track",
            "name": "track",
            "summary": "The vulnerability does not require action at this time. The organization would continue to track the vulnerability and reassess it if new information becomes available. CISA recommends remediating Track vulnerabilities within standard update timelines."
          },
          "trackStar": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Security/SsvcDecisionType/trackStar",
            "name": "trackStar",
            "summary": "(Track* in the SSVC spec) The vulnerability contains specific characteristics that may require closer monitoring for changes. CISA recommends remediating Track* vulnerabilities within standard update timelines."
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/SsvcDecisionType",
        "name": "SsvcDecisionType",
        "profile": "Security",
        "summary": "Specifies the SSVC decision type."
      },
      "VexJustificationType": {
        "description": "VexJustificationType specifies the type of Vulnerability Exploitability eXchange (VEX) justification.",
        "entries": {
          "componentNotPresent": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Security/VexJustificationType/componentNotPresent",
            "name": "componentNotPresent",
            "summary": "The software is not affected because the vulnerable component is not in the product."
          },
          "inlineMitigationsAlreadyExist": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Security/VexJustificationType/inlineMitigationsAlreadyExist",
            "name": "inlineMitigationsAlreadyExist",
            "summary": "Built-in inline controls or mitigations prevent an adversary from leveraging the vulnerability."
          },
          "vulnerableCodeCannotBeControlledByAdversary": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Security/VexJustificationType/vulnerableCodeCannotBeControlledByAdversary",
            "name": "vulnerableCodeCannotBeControlledByAdversary",
            "summary": "The vulnerable component is present, and the component contains the vulnerable code. However, vulnerable code is used in such a way that an attacker cannot mount any anticipated attack."
          },
          "vulnerableCodeNotInExecutePath": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Security/VexJustificationType/vulnerableCodeNotInExecutePath",
            "name": "vulnerableCodeNotInExecutePath",
            "summary": "The affected code is not reachable through the execution of the code, including non-anticipated states of the product."
          },
          "vulnerableCodeNotPresent": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Security/VexJustificationType/vulnerableCodeNotPresent",
            "name": "vulnerableCodeNotPresent",
            "summary": "The product is not affected because the code underlying the vulnerability is not present in the product."
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Security/VexJustificationType",
        "name": "VexJustificationType",
        "profile": "Security",
        "summary": "Specifies the VEX justification type."
      }
    }
  },
  "SimpleLicensing": {
    "classes": {
      "AnyLicenseInfo": {
        "abstract": true,
        "description": "An AnyLicenseInfo is used by licensing properties of software artifacts.\nIt can be a NoneLicense, a NoAssertionLicense,\nsingle license (either on the SPDX License List or a custom-defined license);\na single license with an \"or later\" operator applied; the foregoing with\nadditional text applied; or a set of licenses combined by applying \"AND\" and\n\"OR\" operators recursively.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/AnyLicenseInfo",
        "name": "AnyLicenseInfo",
        "profile": "SimpleLicensing",
        "properties": {},
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/Element",
        "summary": "Abstract class representing a license combination consisting of one or more\nlicenses (optionally including additional text), which may be combined\naccording to the SPDX license expression syntax."
      },
      "LicenseExpression": {
        "abstract": false,
        "description": "A LicenseExpression enables the representation, in a single string, of a\ncombination of one or more licenses, together with additions such as license\nexceptions.\n\nThe syntax for a LicenseExpression string is set forth in the SPDX License\nExpressions annex to the SPDX Specification. A LicenseExpression string is\nnot valid if it does not conform to the grammar set forth in that annex.\n\nThe ExpandedLicensing profile can be used to represent the complete parsed\nlicense expression as a combination of license objects.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/LicenseExpression",
        "name": "LicenseExpression",
        "profile": "SimpleLicensing",
        "properties": {
          "customIdToUri": {
            "path": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/customIdToUri"
          },
          "licenseExpression": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/licenseExpression"
          },
          "licenseListVersion": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/licenseListVersion"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/AnyLicenseInfo",
        "summary": "An SPDX Element containing an SPDX license expression string."
      },
      "SimpleLicensingText": {
        "abstract": false,
        "description": "A SimpleLicensingText represents a License or Addition that is not listed on the SPDX License\nList at https://spdx.org/licenses, and is therefore defined by an SPDX data\ncreator.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/SimpleLicensingText",
        "name": "SimpleLicensingText",
        "profile": "SimpleLicensing",
        "properties": {
          "licenseText": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/licenseText"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/Element",
        "summary": "A license or addition that is not listed on the SPDX License List."
      }
    },
    "description": "The SimpleLicensing profile provides classes and properties to express licenses as a license expression string.\nIt also provides the base abstract class, AnyLicenseInfo, used for references to license information.\nThe SimpleLicensingText class provides a place to record any license text found that does not match a license\non the SPDX license list.\n\nThe ExpandedLicensing profile can be used to represent the complete parsed license expressions.",
    "iri": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing",
    "properties": {
      "customIdToUri": {
        "description": "Within a License Expression, references can be made to a Custom License or a Custom License Addition.\nThe License Expression syntax dictates any reference starting with a \"LicenseRef-\" or \"AdditionRef-\" refers to license or addition text not found in the official SPDX License List.\nThese custom licenses must be a CustomLicense, a CustomLicenseAddtion, or a SimpleLicensingText which are identified with a unique URI identifier.\nThe key for the DictionaryEntry is the string used in the license expression and the value is the URI for the corresponding CustomLicense, CustomLicenseAddition, or SimpleLicensingText.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/customIdToUri",
        "name": "customIdToUri",
        "profile": "SimpleLicensing",
        "range": "https://spdx.org/rdf/3.0.0/terms/Core/DictionaryEntry",
        "summary": "Maps a LicenseRef or AdditionRef string for a Custom License or a Custom License Addition to its URI ID."
      },
      "licenseExpression": {
        "datatype": "string",
        "description": "A licenseExpression enables the representation, in a single string, of a\ncombination of one or more licenses, together with additions such as license\nexceptions.\n\nThe syntax for a LicenseExpression string is set forth in the SPDX License\nExpressions annex to the SPDX Specification. A LicenseExpression string is\nnot valid if it does not conform to the grammar set forth in that annex.\n\nThe ExpandedLicensing profile can be used to represent the complete parsed\nlicense expression as a combination of license objects.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/licenseExpression",
        "name": "licenseExpression",
        "profile": "SimpleLicensing",
        "summary": "A string in the license expression format."
      },
      "licenseListVersion": {
        "datatype": "string",
        "description": "Recognizing that licenses are added to the SPDX License List with each subsequent version, the intent is to provide consumers with the version of the SPDX License List used. \nThis anticipates that in the future, license expression might have used a version of the SPDX License List that is older than the then current one.\nThe specified version of the SPDX License List must include all listed licenses and exceptions referenced in the expression.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/licenseListVersion",
        "name": "licenseListVersion",
        "profile": "SimpleLicensing",
        "summary": "The version of the SPDX License List used in the license expression."
      },
      "licenseText": {
        "datatype": "string",
        "description": "A licenseText contains the plain text of the License or Addition,\nwithout templating or other similar markup.\n\nUsers of the licenseText for a License can apply the SPDX Matching Guidelines\nwhen comparing it to another text for matching purposes.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/SimpleLicensing/licenseText",
        "name": "licenseText",
        "profile": "SimpleLicensing",
        "summary": "Identifies the full text of a License or Addition."
      }
    },
    "summary": "Additional metadata relating to software licensing."
  },
  "Software": {
    "classes": {
      "ContentIdentifier": {
        "abstract": false,
        "description": "A ContentIdentifier is a canonical, unique, immutable identifier of the content of a software artifact, such as a package, a file, or a snippet.\nIt can be used for verifying its identity and integrity.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/ContentIdentifier",
        "name": "ContentIdentifier",
        "profile": "Software",
        "properties": {
          "contentIdentifierType": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Software/contentIdentifierType"
          },
          "contentIdentifierValue": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Software/contentIdentifierValue"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/IntegrityMethod",
        "summary": "A canonical, unique, immutable identifier"
      },
      "File": {
        "abstract": false,
        "description": "Refers to any object that stores content on a computer.\nThe type of content can optionally be provided in the contentType property.\n\nThe fileKind property can be set to `directory` to indicate the file represents a directory and all content stored in that directory.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/File",
        "name": "File",
        "profile": "Software",
        "properties": {
          "contentType": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Software/contentType"
          },
          "fileKind": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Software/fileKind"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwareArtifact",
        "summary": "Refers to any object that stores content on a computer."
      },
      "Package": {
        "abstract": false,
        "description": "A package refers to any unit of content that can be associated with a distribution of software.\nTypically, a package is composed of one or more files.  \nAny of the following non-limiting examples may be (but are not required to be) represented in SPDX as a package:\n\n - a tarball, zip file or other archive\n - a directory or sub-directory\n - a separately distributed piece of software which another Package or File uses or depends upon (e.g., a Python package, a Go module, ...)\n - a container image, and/or each image layer within a container image\n - a collection of one or more sub-packages\n - a Git repository snapshot from a particular point in time\n\nNote that some of these could be represented in SPDX as a file as well.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/Package",
        "name": "Package",
        "profile": "Software",
        "properties": {
          "downloadLocation": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Software/downloadLocation"
          },
          "homePage": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Software/homePage"
          },
          "packageUrl": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Software/packageUrl"
          },
          "packageVersion": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Software/packageVersion"
          },
          "sourceInfo": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Software/sourceInfo"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwareArtifact",
        "summary": "Refers to any unit of content that can be associated with a distribution of software."
      },
      "Sbom": {
        "abstract": false,
        "description": "A Software Bill of Materials (SBOM) is a collection of SPDX Elements describing a single package.\nThis could include details of the content and composition of the product,\nprovenance details of the product and/or\nits composition, licensing information, known quality or security issues, etc.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/Sbom",
        "name": "Sbom",
        "profile": "Software",
        "properties": {
          "sbomType": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Software/sbomType"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/Bom",
        "summary": "A collection of SPDX Elements describing a single package."
      },
      "Snippet": {
        "abstract": false,
        "description": "A Snippet describes a certain part of a file and can be used when the file is known to have some content\nthat has been included from another original source. Snippets are useful for denoting when part of a file\nmay have been originally created under another license or copied from a place with a known vulnerability.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/Snippet",
        "name": "Snippet",
        "profile": "Software",
        "properties": {
          "byteRange": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Software/byteRange"
          },
          "lineRange": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Software/lineRange"
          },
          "snippetFromFile": {
            "maxCount": "1",
            "minCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Software/snippetFromFile"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwareArtifact",
        "summary": "Describes a certain part of a file."
      },
      "SoftwareArtifact": {
        "abstract": true,
        "description": "A software artifact is a distinct article or unit related to software\nsuch as a package, a file, or a snippet.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwareArtifact",
        "name": "SoftwareArtifact",
        "profile": "Software",
        "properties": {
          "additionalPurpose": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Software/additionalPurpose"
          },
          "attributionText": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Software/attributionText"
          },
          "contentIdentifier": {
            "path": "https://spdx.org/rdf/3.0.0/terms/Software/contentIdentifier"
          },
          "copyrightText": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Software/copyrightText"
          },
          "primaryPurpose": {
            "maxCount": "1",
            "path": "https://spdx.org/rdf/3.0.0/terms/Software/primaryPurpose"
          }
        },
        "subClassOf": "https://spdx.org/rdf/3.0.0/terms/Core/Artifact",
        "summary": "A distinct article or unit related to Software."
      }
    },
    "description": "The Software namespace defines concepts related to software artifacts.",
    "iri": "https://spdx.org/rdf/3.0.0/terms/Software",
    "properties": {
      "additionalPurpose": {
        "description": "Additional purpose provides information about the additional purposes of the software artifact in addition to the primaryPurpose.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/additionalPurpose",
        "name": "additionalPurpose",
        "profile": "Software",
        "range": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose",
        "summary": "Provides additional purpose information of the software artifact."
      },
      "attributionText": {
        "datatype": "string",
        "description": "An attributionText for a software Package, File or Snippet provides a consumer\nof SPDX data with acknowledgement content, to assist redistributors of the\nPackage, File or Snippet with reproducing those acknowledgements.\n\nFor example, this field may include a statement that is required by a\nparticular license to be reproduced in end-user documentation, advertising\nmaterials, or another form.\n\nThis field may describe where, or in which contexts, the acknowledgements\nneed to be reproduced, but it is not required to do so. The SPDX data creator\nmay also explain elsewhere (such as in a licenseComment field) how they intend\nfor data in this field to be used.\n\nAn attributionText is is not meant to include the software Package, File or\nSnippet’s actual complete license text (see concludedLicense to identify the\ncorresponding license).",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/attributionText",
        "name": "attributionText",
        "profile": "Software",
        "summary": "Provides a place for the SPDX data creator to record acknowledgement text for\na software Package, File or Snippet."
      },
      "byteRange": {
        "datatype": "https://spdx.org/rdf/3.0.0/terms/Core/PositiveIntegerRange",
        "description": "This field defines the byte range in the original host file that the snippet information applies to.\nA range of bytes is independent of various formatting concerns, and the most accurate way \nof referring to the differences. The choice was made to start the numbering of \nthe byte range at 1 to be consistent with the W3C pointer method vocabulary.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/byteRange",
        "name": "byteRange",
        "profile": "Software",
        "summary": "Defines the byte range in the original host file that the snippet information applies to."
      },
      "contentIdentifier": {
        "datatype": "https://spdx.org/rdf/3.0.0/terms/Software/ContentIdentifier",
        "description": "A contentIdentifier is a canonical, unique, immutable identifier of the content of a software artifact, such as a package, a file, or a snippet.\nIt may be used for verifying its identity and/or integrity.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/contentIdentifier",
        "name": "contentIdentifier",
        "profile": "Software",
        "summary": "A canonical, unique, immutable identifier of the artifact content, that may be used for verifying its identity and/or integrity."
      },
      "contentIdentifierType": {
        "description": "A contentIdentifierType specifies the type of the content identifier.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/contentIdentifierType",
        "name": "contentIdentifierType",
        "profile": "Software",
        "range": "https://spdx.org/rdf/3.0.0/terms/Software/ContentIdentifierType",
        "summary": "Specifies the type of the content identifier."
      },
      "contentIdentifierValue": {
        "datatype": "anyURI",
        "description": "A contentIdentifierValue specifies the value of a content identifier.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/contentIdentifierValue",
        "name": "contentIdentifierValue",
        "profile": "Software",
        "summary": "Specifies the value of the content identifier."
      },
      "contentType": {
        "datatype": "string",
        "description": "This field is a reasonable estimation of the content type of the Element, from a creator perspective.\nContent type is intrinsic to the Element, independent of how the Element is being used.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/contentType",
        "name": "contentType",
        "profile": "Software",
        "summary": "Provides information about the content type of an Element."
      },
      "copyrightText": {
        "datatype": "string",
        "description": "A copyrightText consists of the text(s) of the copyright notice(s) found\nfor a software Package, File or Snippet, if any.\n\nIf a copyrightText contains text, then it may contain any text related to\none or more copyright notices (even if not complete) for that software\nPackage, File or Snippet.\n\nIf a copyrightText has a \"NONE\" value, this indicates that the software\nPackage, File or Snippet contains no copyright notice whatsoever.\n\nIf a copyrightText has a \"NOASSERTION\" value, this indicates that one of the\nfollowing applies:\n* the SPDX data creator has attempted to but cannot reach a reasonable\n  objective determination;\n* the SPDX data creator has made no attempt to determine this field; or\n* the SPDX data creator has intentionally provided no information (no\n  meaning should be implied by doing so).\n\nIf a copyrightText is present, but consists of solely an empty string or a\nstring with no substantive content (e.g., a string that contains only\nwhitespace), then this should be interpreted as equivalent to a \"NOASSERTION\"\nvalue as described above.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/copyrightText",
        "name": "copyrightText",
        "profile": "Software",
        "summary": "Identifies the text of one or more copyright notices for a software Package,\nFile or Snippet, if any."
      },
      "downloadLocation": {
        "datatype": "anyURI",
        "description": "DownloadLocation identifies the download Uniform Resource Identifier \nfor the package at the time that the document was created.\nWhere and how to download the exact package being referenced \nis critical for verification and tracking data.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/downloadLocation",
        "name": "downloadLocation",
        "profile": "Software",
        "summary": "Identifies the download Uniform Resource Identifier for the package at the time that the document was created."
      },
      "fileKind": {
        "description": "An SPDX file may represent a specific file or a directory of files.  In the future, this may be extended to other kinds (e.g. network based files).",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/fileKind",
        "name": "fileKind",
        "profile": "Software",
        "range": "https://spdx.org/rdf/3.0.0/terms/Software/FileKindType",
        "summary": "Describes if a given file is a directory or non-directory kind of file."
      },
      "homePage": {
        "datatype": "anyURI",
        "description": "HomePage is a place for the SPDX document creator to record a website that serves as the package's home page.\nThis saves the recipient of the SPDX document who is looking for more info from\nhaving to search for and verify a match between the package and the associated project home page.\nThis link can also be used to reference further information about the package\nreferenced by the SPDX document creator.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/homePage",
        "name": "homePage",
        "profile": "Software",
        "summary": "A place for the SPDX document creator to record a website that serves as the package's home page."
      },
      "lineRange": {
        "datatype": "https://spdx.org/rdf/3.0.0/terms/Core/PositiveIntegerRange",
        "description": "This field defines the line range in the original host file that the snippet information applies to.\nIf there is a disagreement between the byte range and line range, the byte range values will take precedence.\nA range of lines is a convenient reference for those files where there is a known line delimiter. \nThe choice was made to start the numbering of the lines at 1 to be consistent with the W3C pointer method vocabulary.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/lineRange",
        "name": "lineRange",
        "profile": "Software",
        "summary": "Defines the line range in the original host file that the snippet information applies to."
      },
      "packageUrl": {
        "datatype": "anyURI",
        "description": "A packageUrl (commonly pronounced and referred to as \"purl\") is an attempt to standardize package representations in order to reliably identify and locate software packages. A purl is a URL string which represents a package in a mostly universal and uniform way across programming languages, package managers, packaging conventions, tools, APIs and databases.\n\nthe purl URL string is defined by seven components:\n```\nscheme:type/namespace/name@version?qualifiers#subpath\n```\n\nThe definition for each component can be found in the [purl specification](https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst). Components are designed such that they form a hierarchy from the most significant on the left to the least significant components on the right. \n\nParsing a purl string into its components works from left to right. Some extra type-specific normalizations are required. For more information, see [How to parse a purl string in its components](https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst#how-to-parse-a-purl-string-in-its-components).",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/packageUrl",
        "name": "packageUrl",
        "profile": "Software",
        "summary": "Provides a place for the SPDX data creator to record the package URL string (in accordance with the [package URL spec](https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst)) for a software Package."
      },
      "packageVersion": {
        "datatype": "string",
        "description": "A packageVersion is useful for identification purposes and for indicating later changes of the package version.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/packageVersion",
        "name": "packageVersion",
        "profile": "Software",
        "summary": "Identify the version of a package."
      },
      "primaryPurpose": {
        "description": "primaryPurpose provides information about the primary purpose of the software artifact.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/primaryPurpose",
        "name": "primaryPurpose",
        "profile": "Software",
        "range": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose",
        "summary": "Provides information about the primary purpose of the software artifact."
      },
      "sbomType": {
        "description": "This field is a reasonable estimation of the type of SBOM created from a creator perspective.\nIt is intended to be used to give guidance on the elements that may be contained within it.\nAligning with the guidance produced in [Types of Software Bill of Material (SBOM) Documents](https://www.cisa.gov/sites/default/files/2023-04/sbom-types-document-508c.pdf).",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/sbomType",
        "name": "sbomType",
        "profile": "Software",
        "range": "https://spdx.org/rdf/3.0.0/terms/Software/SbomType",
        "summary": "Provides information about the type of an SBOM."
      },
      "snippetFromFile": {
        "description": "The field identifies the file which contains the snippet.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/snippetFromFile",
        "name": "snippetFromFile",
        "profile": "Software",
        "range": "https://spdx.org/rdf/3.0.0/terms/Software/File",
        "summary": "Defines the original host file that the snippet information applies to."
      },
      "sourceInfo": {
        "datatype": "string",
        "description": "SourceInfo records any relevant background information or additional comments\nabout the origin of the package. For example, this field might include comments \nindicating whether the package was pulled from a source code management system \nor has been repackaged. The creator can provide additional information to describe\nany anomalies or discoveries in the determination of the origin of the package.",
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/sourceInfo",
        "name": "sourceInfo",
        "profile": "Software",
        "summary": "Records any relevant background information or additional comments\nabout the origin of the package."
      }
    },
    "summary": "Everything having to do with software.",
    "vocabularies": {
      "ContentIdentifierType": {
        "description": "ContentIdentifierType specifies the type of a content identifier.",
        "entries": {
          "gitoid": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/ContentIdentifierType/gitoid",
            "name": "gitoid",
            "summary": "Gitoid stands for [Git Object ID](https://git-scm.com/book/en/v2/Git-Internals-Git-Objects) and a gitoid of type blob is a unique hash of a binary artifact. A gitoid may represent the software [Artifact ID](https://github.com/omnibor/spec/blob/main/spec/SPEC.md#artifact-id) or the [OmniBOR Identifier](https://github.com/omnibor/spec/blob/main/spec/SPEC.md#omnibor-identifier) for the software artifact's associated [OmniBOR Document](https://github.com/omnibor/spec/blob/main/spec/SPEC.md#omnibor-document)."
          },
          "swhid": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/ContentIdentifierType/swhid",
            "name": "swhid",
            "summary": "SoftWare Hash IDentifier, persistent intrinsic identifiers for digital artifacts. The syntax of the identifiers is defined in the [SWHID specification](https://www.swhid.org/specification/v1.1/4.Syntax) and in the case of filess they typically look like `swh:1:cnt:94a9ed024d3859793618152ea559a168bbcbb5e2`."
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/ContentIdentifierType",
        "name": "ContentIdentifierType",
        "profile": "Software",
        "summary": "Specifies the type of a content identifier."
      },
      "FileKindType": {
        "description": "An SPDX file may represent a file on disk or a directory of files.  In the future, this may be extended to other kinds (e.g. network based files).",
        "entries": {
          "directory": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/FileKindType/directory",
            "name": "directory",
            "summary": "The file represents a directory and all content stored in that directory."
          },
          "file": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/FileKindType/file",
            "name": "file",
            "summary": "The file represents a single file (default)."
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/FileKindType",
        "name": "FileKindType",
        "profile": "Software",
        "summary": "Enumeration of the different kinds of SPDX file."
      },
      "SbomType": {
        "description": "The set of SBOM types with definitions as defined in [Types of Software Bill of Material (SBOM) Documents](https://www.cisa.gov/sites/default/files/2023-04/sbom-types-document-508c.pdf), published on April 21, 2023. \nAn SBOM type describes the most likely type of an SBOM from the producer perspective, so that consumers can draw conclusions about the data inside an SBOM.  A single SBOM can have multiple SBOM document types associated with it.",
        "entries": {
          "analyzed": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SbomType/analyzed",
            "name": "analyzed",
            "summary": "SBOM generated through analysis of artifacts (e.g., executables, packages, containers, and virtual machine images) after its build. Such analysis generally requires a variety of heuristics. In some contexts, this may also be referred to as a “3rd party” SBOM."
          },
          "build": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SbomType/build",
            "name": "build",
            "summary": "SBOM generated as part of the process of building the software to create a releasable artifact (e.g., executable or package) from data such as source files, dependencies, built components, build process ephemeral data, and other SBOMs."
          },
          "deployed": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SbomType/deployed",
            "name": "deployed",
            "summary": "SBOM provides an inventory of software that is present on a system. This may be an assembly of other SBOMs that combines analysis of configuration options, and examination of execution behavior in a (potentially simulated) deployment environment."
          },
          "design": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SbomType/design",
            "name": "design",
            "summary": "SBOM of intended, planned software project or product with included components (some of which may not yet exist) for a new software artifact."
          },
          "runtime": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SbomType/runtime",
            "name": "runtime",
            "summary": "SBOM generated through instrumenting the system running the software, to capture only components present in the system, as well as external call-outs or dynamically loaded components. In some contexts, this may also be referred to as an “Instrumented” or “Dynamic” SBOM."
          },
          "source": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SbomType/source",
            "name": "source",
            "summary": "SBOM created directly from the development environment, source files, and included dependencies used to build an product artifact."
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SbomType",
        "name": "SbomType",
        "profile": "Software",
        "summary": "Provides a set of values to be used to describe the common types of SBOMs that tools may create."
      },
      "SoftwarePurpose": {
        "description": "This field provides information about the primary purpose of an Element.\nSoftware Purpose is intrinsic to how the Element is being used rather than the content of the Element.\nThis field is a reasonable estimate of the most likely usage of the Element\nfrom the producer and consumer perspective from which both parties can draw conclusions\nabout the context in which the Element exists.",
        "entries": {
          "application": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/application",
            "name": "application",
            "summary": "the Element is a software application"
          },
          "archive": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/archive",
            "name": "archive",
            "summary": "the Element is an archived collection of one or more files (.tar, .zip, etc)"
          },
          "bom": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/bom",
            "name": "bom",
            "summary": "Element is a bill of materials"
          },
          "configuration": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/configuration",
            "name": "configuration",
            "summary": "Element is configuration data"
          },
          "container": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/container",
            "name": "container",
            "summary": "the Element is a container image which can be used by a container runtime application"
          },
          "data": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/data",
            "name": "data",
            "summary": "Element is data"
          },
          "device": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/device",
            "name": "device",
            "summary": "the Element refers to a chipset, processor, or electronic board"
          },
          "deviceDriver": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/deviceDriver",
            "name": "deviceDriver",
            "summary": "Element represents software that controls hardware devices"
          },
          "diskImage": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/diskImage",
            "name": "diskImage",
            "summary": "the Element refers to a disk image that can be written to a disk, booted in a VM, etc. A disk image typically contains most or all of the components necessary to boot, such as bootloaders, kernels, firmware, userspace, etc."
          },
          "documentation": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/documentation",
            "name": "documentation",
            "summary": "Element is documentation"
          },
          "evidence": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/evidence",
            "name": "evidence",
            "summary": "the Element is the evidence that a specification or requirement has been fulfilled"
          },
          "executable": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/executable",
            "name": "executable",
            "summary": "Element is an Artifact that can be run on a computer"
          },
          "file": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/file",
            "name": "file",
            "summary": "the Element is a single file which can be independently distributed (configuration file, statically linked binary, Kubernetes deployment, etc)"
          },
          "filesystemImage": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/filesystemImage",
            "name": "filesystemImage",
            "summary": "the Element is a file system image that can be written to a disk (or virtual) partition"
          },
          "firmware": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/firmware",
            "name": "firmware",
            "summary": "the Element provides low level control over a device's hardware"
          },
          "framework": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/framework",
            "name": "framework",
            "summary": "the Element is a software framework"
          },
          "install": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/install",
            "name": "install",
            "summary": "the Element is used to install software on disk"
          },
          "library": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/library",
            "name": "library",
            "summary": "the Element is a software library"
          },
          "manifest": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/manifest",
            "name": "manifest",
            "summary": "the Element is a software manifest"
          },
          "model": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/model",
            "name": "model",
            "summary": "the Element is a machine learning or artificial intelligence model"
          },
          "module": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/module",
            "name": "module",
            "summary": "the Element is a module of a piece of software"
          },
          "operatingSystem": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/operatingSystem",
            "name": "operatingSystem",
            "summary": "the Element is an operating system"
          },
          "other": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/other",
            "name": "other",
            "summary": "the Element doesn't fit into any of the other categories"
          },
          "patch": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/patch",
            "name": "patch",
            "summary": "Element contains a set of changes to update, fix, or improve another Element"
          },
          "platform": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/platform",
            "name": "platform",
            "summary": "Element represents a runtime environment"
          },
          "requirement": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/requirement",
            "name": "requirement",
            "summary": "the Element provides a requirement needed as input for another Element"
          },
          "source": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/source",
            "name": "source",
            "summary": "the Element is a single or a collection of source files"
          },
          "specification": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/specification",
            "name": "specification",
            "summary": "the Element is a plan, guideline or strategy how to create, perform or analyse an application"
          },
          "test": {
            "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose/test",
            "name": "test",
            "summary": "The Element is a test used to verify functionality on an software element"
          }
        },
        "iri": "https://spdx.org/rdf/3.0.0/terms/Software/SoftwarePurpose",
        "name": "SoftwarePurpose",
        "profile": "Software",
        "summary": "Provides information about the primary purpose of an Element."
      }
    }
  }
}